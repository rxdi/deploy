{"version":3,"sources":["commands-description.ts","commands.ts","check-arguments.ts","app/services/helpers/helpers.ts","app/services/logger/logger.service.ts","app/services/arguments/arguments.service.ts","env.injection.tokens.ts","app/services/tsconfig-generator/tsconfig-generator.service.ts","app/services/file/file.service.ts","environment-setter.module.ts","app/services/ipfs-file/ipfs-file.service.ts","app/services/parcel-bundler/parcel-bundler.service.ts","app/services/file/file-user.service.ts","app/services/dts-generator/dts-generator.service.ts","app/status/status-injection.tokens.ts","app/services/table-service/table-service.ts","app/status/status.service.ts","app/status/status.module.ts","app/services/build-history/build-history.service.ts","app/services/error-reason/error-reason.service.ts","app/services/previous/previous.service.ts","app/services/package-json/package-json.service.ts","app/server/namespace/services/namespace.service.ts","app/services/time/time.service.ts","app/services/html-template-builder/html-template-builder.service.ts","app/services/index.ts","app/server/file/services/file.service.ts","app/plugins/compile/compile.plugin.ts","app/server/services/webui.service.ts","app/server/services/server-push.service.ts","app/server/user/types/user.type.ts","app/server/user/user-queries.controller.ts","app/server/build/types/built-status.type.ts","app/server/history/types/history.type.ts","app/server/history/history-subscription.controller.ts","app/server/history/history.module.ts","app/server/services/compile.service.ts","app/server/namespace/types/namespace.type.ts","app/server/namespace/types/namespace-list.type.ts","app/server/namespace/namespace.controller.ts","app/server/namespace/namespace.module.ts","app/server/build/types/build.type.ts","app/server/history/types/history-list.type.ts","app/server/build/types/process.type.ts","app/server/build/build.controller.ts","app/server/build/build.module.ts","app/server/file/types/file.arguments.ts","app/server/file/types/file-status.type.ts","app/server/file/types/folder-structure.type.ts","app/server/file/types/file.type.ts","app/server/file/types/file-raw.type.ts","app/server/file/file.controller.ts","app/server/file/file.module.ts","app/server/transactions/types/transaction-enum.type.ts","app/server/transactions/types/transaction.type.ts","app/server/transactions/services/transaction/transaction.service.ts","app/server/transactions/transactions.controller.ts","app/server/transactions/transactions.module.ts","app/server/server.module.ts","app/app.module.ts","gapi-framework-imports.ts","app/server/index.ts","app/index.ts","main.ts"],"names":[],"mappings":"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,CAAA,WADY,KACG,WADH,IACZ,cAAA,CAAA,WADY,MACG,UADH,GACG,EADH,GACG,QAAA,QAAA,EAAA,GAAA,OACX,mBAAA,CAAA,eADW,KACI,WADJ,IACX,mBAAA,CAAA,eADW,MACI,UADJ,GACI,EADJ,GACI,QAAA,QAAA,EAAA,GAAA,OACd,uBAAA,CAAA,oCADc,KACsB,WADtB,IACd,uBAAA,CAAA,oCADc,MACsB,UADtB,GACsB,EADtB,GACsB,QAAA,QAAA,EAAA,GAAA,OACnC,4BAAA,CAAA,uBADmC,KACZ,WADY,IACnC,4BAAA,CAAA,uBADmC,MACZ,UADY,GACZ,EADY,GACZ,QAAA,QAAA,EAAA,GAAA,OAC5B,eAAA,CAAA,YAD4B,KAChB,WADgB,IAC5B,eAAA,CAAA,YAD4B,MAChB,UADgB,GAChB,EADgB,GAChB,QAAA,QAAA,EAAA,GAAA,OACL,uBAAA,CAAA,mBADK,KACc,WADd,IACL,uBAAA,CAAA,mBADK,MACc,UADd,GACc,EADd,GACc,QAAA,QAAA,EAAA,GAAA,OACvB,kBAAA,CAAA,eADuB,KACR,WADQ,IACvB,kBAAA,CAAA,eADuB,MACR,UADQ,GACR,EADQ,GACR,QAAA,QAAA,EAAA,GAAA,OACd,mBAAA,CAAA,gBADc,KACE,WADF,IACd,mBAAA,CAAA,gBADc,MACE,UADF,GACE,EADF,GACE,QAAA,QAAA,EAAA,GAAA,OACd,sBAAA,CAAA,kBADc,KACI,WADJ,IACd,sBAAA,CAAA,kBADc,MACI,UADJ,GACI,EADJ,GACI,QAAA,QAAA,EAAA,GAAA,OACvB,gBAAA,CAAA,aADuB,KACV,WADU,IACvB,gBAAA,CAAA,aADuB,MACV,UADU,GACV,EADU,GACV,QAAA,QAAA,EAAA,GAAA,OACR,sBAAA,CAAA,kBADQ,KACU,WADV,IACR,sBAAA,CAAA,kBADQ,MACU,UADV,GACU,EADV,GACU,QAAA,QAAA,EAAA,GAAA,OACjB,cAAA,CAAA,WADiB,KACN,WADM,IACjB,cAAA,CAAA,WADiB,MACN,UADM,GACN,EADM,GACN,QAlClB,CAAA,EAAb,aAAa,CAA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","file":"main.js","sourceRoot":"../src","sourcesContent":["export const CommandDescription = {\n    '--message': 'Simple commit message when deploying module',\n    '--out-dir': 'Parcel build out dir',\n    '--file': 'Pass file path after this argument',\n    '--namespace': `How this module will be named ? Later when you install it you can use it as follow import { MyModule } from '@mynamespace'`,\n    '--beat': `How many seconds the application should stay after deploy recomended 20 seconds so file will be distributed accross the network`,\n    '--html': 'Pass your html file this will override --message or 3-th argument message and you can put whole html',\n    '--webui': `Will spawn web ui with many settings, history, last deployed module etc. can be passed with --open-browser argument`,\n    '--open-browser': `Will open browser for web user interface`,\n    '--graphiql-playground': `Development purposes open graphiql-playground dev tools`,\n    '--node-only': `Will just spawn node so you can use it for persistent data`,\n    '--silent': `Will silent every program output log`,\n    '--unminify': 'Tell ParcelJS to not minify or uglify current deployed module',\n    '--browser': 'Will tell ParcelJS to build current module for browser',\n    '--tsconfig': `Create tsconfig file if not exist`,\n    '--verbose': 'Better logging or you can use -v argument for simplicity',\n    '--default-ipfs-node': `Default ipfs node is GO but if you want you can use JS '--default-ipfs-node js'`,\n    '--ipfs-api-gateway': 'This is the address of the IPFS Gatway default: 8081',\n    '--ipfs-api-port': 'This is the port of the IPFS Api default: 5002',\n    '--ipfs-swarms': `These are the swarms for the Ipfs daemon passing them with comma separated example: --ipfs-swarms /ip4/0.0.0.0/tcp/4001,/ip6/::/tcp/4001, etc...`,\n    '--deployer-config-name': `This is default reactive.json filename you can change with other but in this moment is not tested very well`,\n    '--graphiql': `Open GraphiQL dev screen`,\n    '--open-browser-graphiql': 'Open browser for development purposes with Graphiql Dev tools',\n    '--webui-server-watcher': 'If this argument passed we can spawn our server watcher so we can manage syncronization with UI and passing data from the rxdi-deploy server',\n    '--webui-server-watcher-port': 'Watcher port is the main status port for webui if changed webui will not work defaults: 8957',\n    '--graphiql-subscription-endpoint': 'Graphiql Dev tool subscription endpoint',\n    '--graphiql-auth-token': 'Authentication token for graphiql dev tools',\n    '--graphql-endpoint': 'Endpoint for the Graphql webserver',\n    '--write-effects': 'Development effects are for graphql webserver can be checked here for more info https://github.com/Stradivario/gapi',\n    '--graphql-server-only' : 'This argument will start also graphql web server so you can start making queries and interact with deployer only via API',\n    '--graphiql-endpoint': `Endpoint for Graphiql development tools`,\n    '--graphql-api-port': 'Development server api port is random, if not set --random-port will default to: 9300',\n    '--random-port': 'This parameter will set random port to Graphql Server if for example you dont have the port avalable',\n    '--disable-package-collection': `Disable collecting dependencies from package.json`,\n    '--collect-packages': 'Collect dependencies from package.json and transfer it to reactive.json',\n    '--help': `This help suite :)`,\n    '--server-push-interval': 'Interval for server push service this is how fast the data will update by default is 7 seconds',\n    '--enable-full-folder-access': 'Will give you reading and writing the whole file system so you can scan and build every folder and file (development only)'\n};","import { CommandDescription } from './commands-description';\n\nfunction strEnum<T extends string>(o: Array<T>): { [K in T]: K } {\n    return o.reduce((res, key) => {\n        res[key] = key;\n        return res;\n    }, Object.create(null));\n}\n\nexport const Commands = strEnum([\n    '--message',\n    '--out-dir',\n    '--file',\n    '--namespace',\n    '--beat',\n    '--html',\n    '--webui',\n    '--open-browser',\n    '--node-only',\n    '--silent',\n    '--unminify',\n    '--browser',\n    '--v',\n    '--tsconfig',\n    '--verbose',\n    '--default-ipfs-node',\n    '--deployer-config-name',\n    '--open-browser-graphiql',\n    '--webui-server-watcher',\n    '--webui-server-watcher-port',\n    '--random-port',\n    '--graphiql',\n    '--graphiql-subscription-endpoint',\n    '--graphiql-playground',\n    '--graphiql-auth-token',\n    '--graphiql-endpoint',\n    '--graphql-endpoint',\n    '--write-effects',\n    '--graphql-api-port',\n    '--disable-package-collection',\n    '--collect-packages',\n    '--server-push-interval',\n    '--help',\n    '--ipfs-api-gateway',\n    '--ipfs-api-port',\n    '--ipfs-swarms',\n    '--graphql-server-only',\n    '--enable-full-folder-access'\n]);\nexport type Commands = keyof typeof Commands;\n\n\nexport const ExcludedFromHelpers = strEnum([\n    '--v'\n]);\nexport type ExcludedFromHelpers = keyof typeof ExcludedFromHelpers;\n\nObject.keys(Commands).map(command => {\n    if (Object.keys(ExcludedFromHelpers).filter((c) => c === command).length) {\n        return;\n    }\n    const commandExist = Object.keys(CommandDescription).filter(c => c === command).length;\n    if (!commandExist) {\n        console.error(`\nMissing helper for command ${command} if you seen this message the developers don't do their job very well and this release is broken...\n        `);\n        process.exit(0);\n    }\n});\n\n","import { Commands } from \"./commands\";\nimport { CommandDescription } from \"./commands-description\";\n\n\nconst compareString = (a: string, b: string, percentage: number = 32) => {\n    const first = a.split('');\n    const second = b.split('');\n    const similarity = first.filter((string, index) => string === second[index]).length;\n    const similarPercentage = (similarity / first.length) * 100;\n    if (similarPercentage > percentage) {\n        console.log('Command similarity', similarPercentage + '%');\n        return a;\n    } else {\n        return false;\n    }\n};\nconst args = process.argv.slice(2);\nconst argumentCommands = args.filter(c => c.includes('--'));\n\nexport const checkArguments = () => {\n    argumentCommands.map(command => {\n        const commandExist = Object.keys(CommandDescription).filter(c => c === command).length;\n        if (!commandExist && args.length) {\n            const predicted = Object.keys(Commands).filter(c => compareString(c.split('--')[1], command.split('--')[1])).toString();\n            let message = '';\n            if (predicted.length) {\n                message = `maybe you mean '${predicted}'`\n            }\n            console.error(`\n            \nUnknown option '${command}' ${message}?\nMore options you can find passing --help argument\n            \n            `);\n            process.exit(0);\n        }\n    });\n}","import { Commands } from \"../../../commands\";\n\nexport const includes = (i: Commands) => process.argv.toString().includes(i);\nexport const nextOrDefault = (i: Commands, fb: any = true, type = (p) => (p)) => {\n    if (process.argv.toString().includes(i)) {\n        const isNextArgumentPresent = process.argv[process.argv.indexOf(i) + 1];\n        if (!isNextArgumentPresent) {\n            return fb;\n        }\n        if (isNextArgumentPresent.includes('--')) {\n            return fb;\n        }\n        return type(isNextArgumentPresent);\n    }\n    return fb;\n}\n","import { Service } from \"@rxdi/core\";\nimport { BehaviorSubject } from \"rxjs\";\n\n@Service()\nexport class LoggerService {\n    stdout: BehaviorSubject<string> = new BehaviorSubject('');\n}","\nimport { Service } from '@rxdi/core';\nimport { Commands } from '../../../commands';\nimport { nextOrDefault } from '../helpers/helpers';\n\n@Service()\nexport class ArgumentsService {\n\n    nextOrDefault(i: Commands, fallback: any = null, type = (p) => (p)) {\n        return nextOrDefault(i, fallback, type);\n    }\n\n}","import { InjectionToken } from '@rxdi/core';\nimport * as Datastore from 'nedb';\n\nexport type __DEPLOYER_ARGUMENTS = string[];\nexport type __PARCEL_BROWSER_BUILD = boolean;\nexport type __PARCEL_MINIFY = boolean;\nexport type __GENERATE_TS_CONFIG = boolean;\nexport type __PARCEL_BUILD_OUT_DIR = 'build';\nexport type __FILE_PATH = './index';\nexport type __HOME_DIR = string;\nexport type __FILE_NAME = string;\nexport type __NAMESPACE = '@rxdi/core';\nexport type __FOLDER = string;\nexport type __FILE_EXTENSION = '.ts' | '.js';\nexport type __IPFS_NODE_RESOLUTION_TIME = number;\nexport type __DEPLOYER_OUTPUT_CONFIG_NAME = 'reactive.json' | 'package.json';\nexport type __PROCESSING_TIME_INIT = Date;\nexport type __PROCESSING_TIME_FINISH = Date;\nexport type __PROCESSING_TIME_END = Date;\nexport type __SETTINGS_DATABASE = Datastore;\nexport type __NAMESPACE_DB = Datastore;\nexport type __BUILD_HISTORY_DATABASE = Datastore;\nexport type __PREVIWS_DATABASE = Datastore;\nexport type __TRANSACTIONS_DATABASE = Datastore;\n\nexport type __COMMIT_MESSAGE = string;\nexport type __CREATE_HTML_PAGE = string;\nexport type __NODE_MODULES = string;\nexport type __ROOT_FOLDER = string;\n\nexport const __ROOT_FOLDER = new InjectionToken('root_folder');\nexport const __NODE_MODULES = new InjectionToken('local_node_modules');\nexport const __DEPLOYER_ARGUMENTS = new InjectionToken('rxdi-deployer-command-arguments');\nexport const __PARCEL_BROWSER_BUILD = new InjectionToken<boolean>('rxdi-deployer-parcel-is-browser-build');\nexport const __PARCEL_MINIFY = new InjectionToken<boolean>('rxdi-deployer-parcel-minify');\nexport const __PARCEL_BUILD_OUT_DIR = new InjectionToken<boolean>('rxdi-deployer-parcel-build-out-dir');\nexport const __PARCEL_SETTINGS = new InjectionToken('rxdi-deployer-parcel-settings');\nexport const __GENERATE_TS_CONFIG = new InjectionToken<boolean>('rxdi-deployer-tsconfig-generate');\nexport const __FILE_PATH = new InjectionToken<boolean>('rxdi-deployer-file-path');\nexport const __FILE_NAME = new InjectionToken<boolean>('rxdi-deployer-file-name');\nexport const __NAMESPACE = new InjectionToken<boolean>('rxdi-deployer-namespace');\nexport const __FOLDER = new InjectionToken<boolean>('rxdi-deployer-folder');\nexport const __FILE_EXTENSION = new InjectionToken<boolean>('rxdi-deployer-file-extension');\nexport const __IPFS_NODE_RESOLUTION_TIME = new InjectionToken<boolean>('rxdi-deployer-node-resolution-time');\nexport const __DEPLOYER_OUTPUT_CONFIG_NAME = new InjectionToken<boolean>('rxdi-deployer-default-migration-package-name');\nexport const __PROCESSING_TIME_INIT = new InjectionToken<boolean>('rxdi-deployer-processin-time-init');\nexport const __PROCESSING_TIME_FINISH = new InjectionToken<boolean>('rxdi-deployer-processin-time-finish');\nexport const __PROCESSING_TIME_END = new InjectionToken<boolean>('rxdi-deployer-processin-time-end');\nexport const __SETTINGS_DATABASE = new InjectionToken<boolean>('rxdi-deployer-home-settings');\nexport const __BUILD_HISTORY_DATABASE = new InjectionToken<boolean>('rxdi-deployer-build-history-database');\nexport const __PREVIWS_DATABASE = new InjectionToken<boolean>('rxdi-deployer-previews-database');\nexport const __TRANSACTIONS_DATABASE = new InjectionToken<boolean>('rxdi-deployer-transactions-database');\nexport const __NAMESPACE_DB = new InjectionToken<boolean>('rxdi-deployer-namespace-database');\nexport const __HOME_DIR = new InjectionToken<boolean>('rxdi-deployer-home-directory');\nexport const __COMMIT_MESSAGE = new InjectionToken<boolean>('rxdi-deployer-commit-message');\nexport const __CREATE_HTML_PAGE = new InjectionToken<boolean>('rxdi-deployer-commit-message');\n\nexport interface __PARCEL_SETTINGS {\n    watch?: boolean;\n    detailedReport?: boolean;\n    outFile?: string;\n    publicUrl?: string;\n    cache?: boolean;\n    cacheDir?: '.cache';\n    contentHash?: false;\n    scopeHoist?: false;\n    https?: { cert: string; key: string; };\n    logLevel?: 1 | 2 | 3;\n    hmr?: true;\n    hmrPort?: 0;\n    sourceMaps?: true;\n    hmrHostname?: string;\n    detailedReports?: boolean;\n};\n\nexport class DagModel {\n    name: string;\n    typings?: string;\n    module: string;\n    metadata?: {};\n    message?: string;\n    hash?: string;\n    createdAt?: Date;\n    previous?: string[];\n    dependencies?: string[];\n    packages?: { name: string; version: string }[];\n    ipfs?: {provider: string; dependencies: string[]}[]\n}\n\nexport class PreviousModel {\n    id?: string;\n    name: string;\n    hash: string;\n}\n\n","import { Service } from '@rxdi/core';\n\n@Service()\nexport class TsConfigGenratorService {\n\n    getTsConfig(filename: string) {\n        return `\n{\n    \"compilerOptions\": {\n        \"declaration\": true,\n        \"module\": \"commonjs\",\n        \"target\": \"es6\",\n        \"baseUrl\": \"src\",\n        \"stripInternal\": true,\n        \"emitDecoratorMetadata\": true,\n        \"experimentalDecorators\": true,\n        \"moduleResolution\": \"node\",\n        \"outDir\": \".\",\n        \"lib\": [\n            \"es2017\",\n            \"es2016\",\n            \"es2015\",\n            \"es6\",\n            \"dom\",\n            \"esnext.asynciterable\"\n        ],\n        \"skipLibCheck\": true,\n        \"typeRoots\": [\n            \"node_modules/@types\"\n        ]\n    },\n    \"include\": [\n        \".\"\n    ],\n    \"files\": [\n        \"${filename}.ts\"\n    ]\n}`;\n    }\n\n}","import { Service, FileService as RxdiFileService, BootstrapLogger } from '@rxdi/core';\nimport { readFile, writeFile } from 'fs';\n\n@Service()\nexport class FileService {\n\n    constructor(\n        private fileService: RxdiFileService,\n        private logger: BootstrapLogger\n    ) { }\n\n    ensureDir(dir: string) {\n        return this.fileService.mkdirp(dir);\n    }\n\n    async readFile(file: string): Promise<string> {\n        return await this.readFilePromisify(file);\n    }\n\n    async writeFile(path: string, data: any) {\n        return await this.writeFilePromisify(path, data);\n    }\n\n    async createFolder(folder: string) {\n        return await this.fileService.mkdirp(folder).toPromise();\n    }\n\n    fileWalker(folder: string) {\n        return this.fileService.fileWalker(folder);\n    }\n\n    private readFilePromisify(file: string): Promise<string>{\n        return new Promise((resolve, reject) => {\n            readFile(file, 'utf8', (err, data) => {\n                if (err) {\n                    reject(err);\n                }\n                resolve(data);\n            });\n        });\n    }\n\n    readFilePromisifyFallback(file: string) {\n        return new Promise(async (resolve, reject) => {\n            readFile(file, 'utf8', (err, data) => {\n                if (err) {\n                    this.logger.error('Fallback missing reactive.json file will create one!');\n                    return this.writeFile(file, JSON.stringify({\n                        name: '',\n                        typings: '',\n                        module: '',\n                        message: '',\n                        previews: []\n                    }))\n                        .then(async () => resolve(await this.readFilePromisify(file)))\n                        .catch(e => reject(e));\n                }\n                return resolve(data);\n            });\n        });\n    }\n\n    private writeFilePromisify(path: string, data: any, encoding: string = 'utf-8'): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            writeFile(path, data, { encoding }, (err) => {\n                if (err) {\n                    reject(err);\n                }\n                resolve(true);\n            });\n        });\n    }\n\n    readFileRaw(file: string): Promise<Buffer> {\n        return new Promise((resolve, reject) => {\n            readFile(file, (err, data) => {\n                if (err) {\n                    reject(err);\n                }\n                resolve(data);\n            });\n        });\n    }\n\n}","import { Module } from '@rxdi/core';\nimport { ArgumentsService } from './app/services/arguments/arguments.service';\nimport {\n  __NODE_MODULES,\n  __DEPLOYER_ARGUMENTS,\n  __PARCEL_BROWSER_BUILD,\n  __PARCEL_MINIFY,\n  __PARCEL_BUILD_OUT_DIR,\n  __PARCEL_SETTINGS,\n  __GENERATE_TS_CONFIG,\n  __FILE_PATH,\n  __NAMESPACE,\n  __FOLDER,\n  __FILE_EXTENSION,\n  __IPFS_NODE_RESOLUTION_TIME,\n  __DEPLOYER_OUTPUT_CONFIG_NAME,\n  __PROCESSING_TIME_INIT,\n  __PROCESSING_TIME_FINISH,\n  __PROCESSING_TIME_END,\n  __FILE_NAME,\n  __HOME_DIR,\n  __SETTINGS_DATABASE,\n  __BUILD_HISTORY_DATABASE,\n  __PREVIWS_DATABASE,\n  __COMMIT_MESSAGE,\n  __CREATE_HTML_PAGE,\n  __ROOT_FOLDER,\n  __NAMESPACE_DB,\n  __TRANSACTIONS_DATABASE\n} from './env.injection.tokens';\nimport { TsConfigGenratorService } from './app/services/tsconfig-generator/tsconfig-generator.service';\nimport { FileService } from './app/services/file/file.service';\nimport { homedir } from 'os';\nconst Datastore = require('nedb');\nimport { includes, nextOrDefault } from './app/services/helpers/helpers';\nimport { unlinkSync } from 'fs';\n\n@Module({\n  services: [\n    {\n      provide: 'isLockExists',\n      deps: [FileService],\n      lazy: true,\n      useFactory: async (fileService: FileService) => {\n        const repoLockPath = `${homedir()}/.jsipfs/repo.lock`;\n        const lockPath = `${homedir()}/.jsipfs/datastore/LOCK`;\n        try {\n          await fileService.readFile(repoLockPath);\n          unlinkSync(repoLockPath);\n        } catch (e) {}\n        try {\n          await fileService.readFile(lockPath);\n          unlinkSync(lockPath);\n        } catch (e) {}\n        return true;\n      }\n    },\n    {\n      provide: __DEPLOYER_ARGUMENTS,\n      useFactory: () => process.argv.slice(2)\n    },\n    {\n      provide: __NODE_MODULES,\n      useValue: __dirname.replace('dist', '') + '/node_modules'\n    },\n    {\n      provide: __ROOT_FOLDER,\n      useValue: __dirname.replace('dist', '')\n    },\n    {\n      provide: __HOME_DIR,\n      useValue: homedir()\n    },\n    {\n      provide: __COMMIT_MESSAGE,\n      deps: [__DEPLOYER_ARGUMENTS],\n      useFactory: (args: __DEPLOYER_ARGUMENTS) => {\n        const hasArgument = nextOrDefault('--message', false);\n        if (hasArgument) {\n          return hasArgument;\n        }\n        if (args[2] && args[2].includes('--')) {\n          return '';\n        }\n        return args[2] || '';\n      }\n    },\n    {\n      provide: __PARCEL_BROWSER_BUILD,\n      useFactory: () => includes('--browser')\n    },\n    {\n      provide: __PARCEL_MINIFY,\n      useFactory: () => !includes('--unminify')\n    },\n    {\n      provide: __PARCEL_BUILD_OUT_DIR,\n      useFactory: () => nextOrDefault('--out-dir', 'build')\n    },\n    {\n      provide: __PARCEL_SETTINGS,\n      useFactory: () => ({\n        watch: false,\n        logLevel: 3,\n        detailedReport: true\n      })\n    },\n    {\n      provide: __GENERATE_TS_CONFIG,\n      useFactory: (): __GENERATE_TS_CONFIG => includes('--tsconfig')\n    },\n    {\n      provide: __FILE_PATH,\n      deps: [__DEPLOYER_ARGUMENTS],\n      useFactory: (args: __DEPLOYER_ARGUMENTS) => {\n        if (includes('--file')) {\n          return nextOrDefault('--file', '');\n        }\n        if (\n          args[0] &&\n          args[0].includes('--') &&\n          args[0] &&\n          !args[0].match(/[^\\\\]*\\.(\\w+)$/)\n        ) {\n          return './index.ts';\n        }\n        return args[0] || './index.ts';\n      }\n    },\n    {\n      provide: __FILE_NAME,\n      deps: [__FILE_PATH],\n      useFactory: (filePath: __FILE_PATH) => filePath.split('/').pop()\n    },\n    {\n      provide: __NAMESPACE,\n      deps: [__DEPLOYER_ARGUMENTS],\n      useFactory: (args: __DEPLOYER_ARGUMENTS) => {\n        if (includes('--namespace')) {\n          return nextOrDefault('--namespace', '@rxdi');\n        }\n        if (args[1] && args[1].includes('--')) {\n          return '@rxdi';\n        }\n        return args[1] || '@rxdi';\n      }\n    },\n    {\n      provide: __FOLDER,\n      deps: [__FILE_PATH],\n      useFactory: (filePath: __FILE_PATH) =>\n        filePath.substring(0, filePath.lastIndexOf('/'))\n    },\n    {\n      provide: __FILE_EXTENSION,\n      deps: [__FILE_PATH],\n      useFactory: (filePath: __FILE_PATH) => {\n        return filePath.match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i)\n          ? filePath.match(/\\.([0-9a-z]+)(?:[\\?#]|$)/i)[0]\n          : 'ts';\n      }\n    },\n    {\n      provide: __IPFS_NODE_RESOLUTION_TIME,\n      useFactory: () => nextOrDefault('--beat', 20, Number)\n    },\n    {\n      provide: __DEPLOYER_OUTPUT_CONFIG_NAME,\n      useValue: nextOrDefault('--deployer-config-name', 'reactive.json')\n    },\n    {\n      provide: __PROCESSING_TIME_INIT,\n      useFactory: () => Date.now()\n    },\n    {\n      provide: __PROCESSING_TIME_FINISH,\n      useFactory: () => nextOrDefault('--deployer-config-name', 'reactive.json')\n    },\n    {\n      provide: __PROCESSING_TIME_END,\n      deps: [ArgumentsService],\n      useFactory: () => nextOrDefault('--deployer-config-name', 'reactive.json')\n    },\n    {\n      provide: __CREATE_HTML_PAGE,\n      deps: [ArgumentsService],\n      useFactory: () =>\n        nextOrDefault('--html', '<h1>@rxdi decentralized module</h1>')\n    },\n    {\n      provide: 'init-ts-config-file',\n      deps: [\n        __GENERATE_TS_CONFIG,\n        __FILE_NAME,\n        __FOLDER,\n        TsConfigGenratorService,\n        FileService\n      ],\n      lazy: true,\n      useFactory: async (\n        tsConfig: __GENERATE_TS_CONFIG,\n        fileName: __FILE_NAME,\n        folder: __FOLDER,\n        generator: TsConfigGenratorService,\n        fileService: FileService\n      ) => {\n        if (tsConfig) {\n          await fileService.writeFile(\n            folder + '/tsconfig.json',\n            generator.getTsConfig(fileName.replace('.ts', ''))\n          );\n        }\n        return tsConfig;\n      }\n    },\n    {\n      provide: __SETTINGS_DATABASE,\n      deps: [__HOME_DIR],\n      lazy: true,\n      useFactory: homeDir =>\n        new Promise(resolve => {\n          const database = new Datastore({\n            filename: `${homeDir}/.rxdi/settings`,\n            autoload: true,\n            timestampData: true\n          });\n          database.loadDatabase(e => {\n            if (e) {\n              throw new Error('Error loading database!');\n            }\n            resolve(database);\n          });\n        })\n    },\n    {\n      provide: __NAMESPACE_DB,\n      deps: [__HOME_DIR],\n      lazy: true,\n      useFactory: homeDir =>\n        new Promise(resolve => {\n          const database = new Datastore({\n            filename: `${homeDir}/.rxdi/namespace`,\n            autoload: true,\n            timestampData: true\n          });\n          database.loadDatabase(e => {\n            if (e) {\n              throw new Error('Error loading database!');\n            }\n            resolve(database);\n          });\n        })\n    },\n    {\n      provide: __BUILD_HISTORY_DATABASE,\n      deps: [__HOME_DIR],\n      lazy: true,\n      useFactory: homeDir =>\n        new Promise(resolve => {\n          const database = new Datastore({\n            filename: `${homeDir}/.rxdi/history`,\n            autoload: true,\n            timestampData: true\n          });\n          database.loadDatabase(e => {\n            if (e) {\n              throw new Error('Error loading database!');\n            }\n            resolve(database);\n          });\n        })\n    },\n    {\n      provide: __PREVIWS_DATABASE,\n      deps: [__HOME_DIR],\n      lazy: true,\n      useFactory: homeDir =>\n        new Promise(resolve => {\n          const database = new Datastore({\n            filename: `${homeDir}/.rxdi/previews`,\n            autoload: true\n          });\n          database.loadDatabase(e => {\n            if (e) {\n              throw new Error('Error loading database!');\n            }\n            resolve(database);\n          });\n        })\n    },\n    {\n      provide: __TRANSACTIONS_DATABASE,\n      deps: [__HOME_DIR],\n      lazy: true,\n      useFactory: homeDir =>\n        new Promise(resolve => {\n          const database = new Datastore({\n            filename: `${homeDir}/.rxdi/transactions`,\n            autoload: true\n          });\n          database.loadDatabase(e => {\n            if (e) {\n              throw new Error('Error loading database!');\n            }\n            resolve(database);\n          });\n        })\n    }\n  ]\n})\nexport class EnvironemntSetterModule {}\n","import { Service, Inject, BootstrapLogger } from '@rxdi/core';\nimport { IPFSFile, FilesAPI } from '@gapi/ipfs';\nimport { Readable } from 'stream';\nimport { IpfsDaemonInfoService } from '@gapi/ipfs-daemon/ipfs-daemon-node-info';\nimport { DaemonNodeInfo, IPFS_DAEMON } from '@gapi/ipfs-daemon';\nimport { Observable, combineLatest } from 'rxjs';\nimport { get as http, IncomingMessage } from 'http';\nimport { get as https } from 'https';\nimport { switchMap } from 'rxjs/operators';\n\n@Service()\nexport class FileIpfsService {\n\n    nodeInfo: DaemonNodeInfo = this.ipfsDaemonNodeInfo.info;\n    providers = {\n        infura: 'https://ipfs.infura.io/ipfs/',\n        cloudflare: 'https://cloudflare-ipfs.com/ipfs/',\n        ipfsOriginal: 'https://ipfs.io/ipfs/',\n        thisNode: `http://${this.ipfsDaemonNodeInfo.info.gatewayHost}:${this.ipfsDaemonNodeInfo.info.gatewayPort}/ipfs/`\n    };\n    constructor(\n        @Inject(IPFS_DAEMON) private ipfsDaemon: { api: FilesAPI },\n        private ipfsDaemonNodeInfo: IpfsDaemonInfoService,\n        private logger: BootstrapLogger\n    ) {}\n\n    async addFile(file: string) {\n        const content = new Readable();\n        content.push(file);\n        content.push(null);\n        const ipfsFile = await this.ipfsDaemon.api.add([{ content }]);\n        try {\n            this.ping(ipfsFile[0].hash)\n            .subscribe()\n        } catch (e) {\n\n        }\n\n        // this.logger.log(`\\nLocal: http://${this.nodeInfo.gatewayHost}:${this.nodeInfo.gatewayPort}/ipfs/${ipfsFile[0].hash}`);\n        // this.logger.log(`\\nInfura: ${providers.infura}${ipfsFile[0].hash}`);\n        this.logger.log(`\\Cloudflare: ${this.providers.cloudflare}${ipfsFile[0].hash}`);\n        // this.logger.log(`\\nIpfs: ${providers.ipfsOriginal}${ipfsFile[0].hash}`);\n\n        return ipfsFile;\n    }\n    ping(hash: string) {\n        return this.httpObservable(`${this.providers.thisNode}${hash}`)\n            .pipe(\n                switchMap(() => combineLatest(\n                    this.httpObservable(`${this.providers.infura}${hash}`),\n                    this.httpObservable(`${this.providers.cloudflare}${hash}`),\n                    this.httpObservable(`${this.providers.ipfsOriginal}${hash}`)\n                ))\n            );\n    }\n\n    httpObservable(link: string): Observable<IncomingMessage> {\n        return Observable.create(o => {\n            if (link.includes('https')) {\n                https(link, (r) => o.next(r));\n            } else {\n                http(link, (r) => o.next(r));\n            }\n        });\n    }\n    async wait(ipfsFile: IPFSFile[]) {\n        return await new Promise((resolve, reject) => this.ping(ipfsFile[0].hash)\n            .subscribe(\n                stream => resolve(stream), e => reject(e)\n            ))\n    }\n\n    async addPackage(p) {\n        return await this.addFile(JSON.stringify(p, null, 4));\n    }\n\n    async catIpfsFile(hash: string) {\n        return await this.ipfsDaemon.api.cat(hash);\n    }\n\n    async getIpfsFile(hash: string) {\n        return await this.ipfsDaemon.api.get(hash);\n    }\n\n    async addRawFile(content: Buffer) {\n        const ipfsFile = await this.ipfsDaemon.api.add([{ content }]);\n        this.ping(ipfsFile[0].hash).subscribe();\n        return ipfsFile;\n    }\n\n}\n\n","import { Service, Inject } from '@rxdi/core';\nimport Bundler = require('parcel-bundler');\nimport { __PARCEL_BROWSER_BUILD, __PARCEL_MINIFY, __PARCEL_BUILD_OUT_DIR, __PARCEL_SETTINGS } from '../../../env.injection.tokens';\n\n@Service()\nexport class ParcelBundlerService {\n\n    constructor(\n        @Inject(__PARCEL_BROWSER_BUILD) private isBrowserBuild: __PARCEL_BROWSER_BUILD,\n        @Inject(__PARCEL_MINIFY) private isBuildMinfied: __PARCEL_BROWSER_BUILD,\n        @Inject(__PARCEL_BUILD_OUT_DIR) private buildOutDir: __PARCEL_BUILD_OUT_DIR,\n        @Inject(__PARCEL_SETTINGS) private settings: __PARCEL_SETTINGS\n    ) {}\n\n    async prepareBundler(file, outDir = null, fileName?: string) {\n        return new Promise((resolve, reject) => {\n            const options = {\n                target: this.isBrowserBuild ? 'browser' : 'node',\n                minify: this.isBuildMinfied,\n                outFile: fileName,\n                outDir: outDir || this.buildOutDir,\n                ...this.settings\n            };\n            const bundler = new Bundler(file, options);\n            let bundle = null;\n            bundler.on('bundled', (compiledBundle) => {\n                // const inter: {\n                //     id; name; basename; relativeName; options; encoding; type; processed; contents; ast; generated; hash; parentDeps; dependencies\n                //     depAssets; parentBundle; bundles; cacheData; startTime; endTime; buildTime; bundledSize; resolver;\n                // } = compiledBundle.entryAsset;\n                // console.log(inter.buildTime, inter.startTime, inter.endTime, inter.bundledSize);\n                bundle = compiledBundle;\n            });\n            bundler.on('buildEnd', () => {\n                process.argv.toString().includes('--silent') ? console.log = () => null : process.stdout.write(`Parcel Build finished! Bundle source: ${bundle.name}\\n`);\n                bundle = null;\n                setTimeout(() => resolve(), 1000);\n            });\n            bundler.on('buildError', e => reject(e));\n            bundler.bundle();\n        });\n    }\n\n}\n","import { Service, Inject } from '@rxdi/core';\nimport { FileService } from './file.service';\nimport {\n    __PARCEL_BUILD_OUT_DIR\n} from '../../../env.injection.tokens';\n\n@Service()\nexport class FileUserService {\n\n    @Inject(__PARCEL_BUILD_OUT_DIR) private parcelBuildDir: __PARCEL_BUILD_OUT_DIR;\n\n    constructor(\n        private fileService: FileService\n    ) { }\n\n    async writeFile(file: string, fileName: string, namespace: string) {\n        return await new Promise(async (resolve, reject) => {\n            this.fileService.ensureDir(`${this.parcelBuildDir}/${namespace}`)\n                .subscribe(\n                    async () => {\n                        await this.fileService.writeFile(`${this.parcelBuildDir}/${namespace}/${fileName}`, file);\n                        resolve(true);\n                    },\n                    e => reject(e)\n                );\n        });\n    }\n\n    async writeDag(path: string, file: string) {\n        return await new Promise(async (resolve, reject) => {\n            await this.fileService.writeFile(path, file);\n            resolve(true);\n        });\n    }\n\n}\n","import { Service, BootstrapLogger, Inject } from '@rxdi/core';\nimport childProcess = require('child_process');\nimport { __NODE_MODULES } from '../../../env.injection.tokens';\n\n@Service()\nexport class TypescriptDefinitionGeneratorService {\n    child: childProcess.ChildProcess;\n\n    constructor(\n        private logger: BootstrapLogger,\n        @Inject(__NODE_MODULES) private node_modules: string\n    ) { }\n\n    private validateEntries(namespace: string, projectPath: string, outPath: string) {\n        if (!projectPath) {\n            throw new Error('Missing project path');\n        }\n        if (!namespace) {\n            throw new Error('Missing project namespace');\n        }\n\n        if (!outPath) {\n            throw new Error('Missing project outPath');\n        }\n    }\n\n    async mergeTypings(namespace: string, projectPath, outPath: string) {\n        this.validateEntries(namespace, projectPath, outPath);\n        return new Promise((resolve, reject) => {\n            if (this.child) {\n                this.child.stdout.removeAllListeners('data');\n                this.child.stderr.removeAllListeners('data');\n                this.child.removeAllListeners('exit');\n                this.child.kill();\n            }\n            process.env = Object.assign(process.env, {});\n            this.logger.log('Typescript merging definitions started in child process...\\n');\n            this.child = childProcess.spawn(\n                `${this.node_modules}/.bin/rxdi-merge`,\n                [\n                    '--name',\n                    namespace,\n                    '--project',\n                    projectPath,\n                    '--out',\n                    outPath\n                ]\n            );\n            this.child.stdout.on('data', (data) => {\n                process.argv.toString().includes('--silent') ? console.log = () => null : process.stdout.write(data);\n            });\n            this.child.stderr.on('data', (data) => {\n                if (data.toString().includes('Unable to resolve configuration')) {\n                    this.logger.log('If you want rxdi-deploy to create tsconfig.json for you pass parameter --tsconfig');\n                }\n                reject(process.stdout.write(data));\n            });\n            this.child.on('exit', (code) => {\n                this.child.kill();\n                this.child = null;\n                this.logger.log(`Child process exited with code ${code}\\n`);\n                resolve(true);\n            });\n        });\n    }\n\n}","import { BehaviorSubject } from 'rxjs';\nimport { InjectionToken } from '@rxdi/core';\n\nexport type STATUS_TYPE = BehaviorSubject<boolean>;\nexport type BUILD_STATUS = 'SUCCESS' | 'FAILED' | 'WARNING';\n\nclass BuildStatus {\n    status: BUILD_STATUS = 'SUCCESS';\n    message?: string = '';\n}\nexport class FILE_DEPLOYMENT_STATUS_INTERFACE {\n    file?: BuildStatus = new BuildStatus();\n    typings?: BuildStatus = new BuildStatus();\n    module?: BuildStatus = new BuildStatus();\n}\nexport type FILE_DEPLOYMENT_STATUS = BehaviorSubject<FILE_DEPLOYMENT_STATUS_INTERFACE>;\n\nexport const START = new InjectionToken('compilation-started');\nexport const FILE_DEPLOYMENT_STATUS = new InjectionToken('files-deploy-ment');\n","\nimport { Service, Inject } from '@rxdi/core';\nimport { IPFSFile } from '@gapi/ipfs';\nimport { FILE_DEPLOYMENT_STATUS } from '../../status/status-injection.tokens';\nimport { FileIpfsService } from '../ipfs-file/ipfs-file.service';\nimport { DagModel } from '../../../env.injection.tokens';\nvar Table = require('terminal-table');\n\n@Service()\nexport class TableService {\n    @Inject(FILE_DEPLOYMENT_STATUS) private $deploymentStatus: FILE_DEPLOYMENT_STATUS;\n\n    constructor(\n        private fileIpfsService: FileIpfsService\n    ) { }\n\n    createGenericTableStatus(ModuleStatus) {\n        let Icon, Color;\n\n        if (ModuleStatus === 'WARNING') {\n            Icon = '⚠';\n            Color = 'yellow';\n        }\n        if (ModuleStatus === 'FAILED') {\n            Icon = '✘';\n            Color = 'red';\n        }\n\n        if (ModuleStatus === 'SUCCESS') {\n            Icon = '✔';\n            Color = 'green';\n        }\n        return { Icon, Color };\n    }\n\n    createTable(file: IPFSFile[], typings: IPFSFile[], m: IPFSFile[]) {\n\n        const provider = 'https://cloudflare-ipfs.com/ipfs/'\n        let FileStatus = this.$deploymentStatus.getValue().file;\n        let TypingsStatus = this.$deploymentStatus.getValue().typings;\n        let ModuleStatus = this.$deploymentStatus.getValue().module;\n        const statusFile = this.createGenericTableStatus(FileStatus.status);\n        const statusTypings = this.createGenericTableStatus(TypingsStatus.status);\n        const statusModule = this.createGenericTableStatus(ModuleStatus.status);\n        let columns = ['', 'Status', 'File Type', 'Size', 'Gateway'];\n        let width = [4, '6%', '6%', '8%', '78%'];\n        let fileRow = [statusFile.Icon, FileStatus.status, 'Bundle', `${file[0].size} bytes`, `${provider}${file[0].hash}`];\n        let typingsRow = [statusTypings.Icon, TypingsStatus.status, 'Typings', `${typings[0].size} bytes`, `${provider}${typings[0].hash}`];\n        let moduleRow = [statusModule.Icon, ModuleStatus.status, 'Module', `${m[0].size} bytes`, `${provider}${m[0].hash}`];\n\n        if (FileStatus.status !== 'SUCCESS' || TypingsStatus.status !== 'SUCCESS' || ModuleStatus.status !== 'SUCCESS') {\n            columns.push('Errors');\n            width = [4, '6%', '6%', '8%', '40%', '38%'];\n\n        }\n\n        if (FileStatus.status !== 'SUCCESS') {\n            fileRow.push(FileStatus.message);\n        }\n\n        if (TypingsStatus.status !== 'SUCCESS') {\n            typingsRow.push(TypingsStatus.message);\n        }\n\n        if (ModuleStatus.status !== 'SUCCESS') {\n            moduleRow.push(ModuleStatus.message);\n        }\n\n        const t = new Table({\n            borderStyle: 2,\n            horizontalLine: true,\n            width,\n            rightPadding: 0,\n            leftPadding: 1\n        });\n\n\n        t.push(columns);\n        t.push(fileRow);\n        t.push(typingsRow);\n        t.push(moduleRow);\n\n        t.attrRange({ row: [0, 1] }, {\n            color: 'green',\n            bg: 'black'\n        });\n\n        t.attrRange({ column: [0, 1] }, {\n            color: 'green',\n            bg: 'black'\n        });\n\n        t.attrRange({ column: [0, 2], row: [0, 4] }, {\n            color: 'green',\n            bg: 'black'\n        });\n\n        t.attrRange({ column: [0, 1], row: [0, 2] }, {\n            color: 'green'\n        });\n\n        t.attrRange({ column: [0, 2], row: [0, 2] }, {\n            color: statusFile.Color\n        });\n        t.attrRange({ column: [0, 2], row: [2, 3] }, {\n            color: statusTypings.Color\n        });\n        t.attrRange({ column: [0, 2], row: [3, 4] }, {\n            color: statusModule.Color\n        });\n        t.attrRange({\n            row: [1],\n            column: [1]\n        }, {\n                // leftPadding: 5\n            });\n\n        if (FileStatus.status !== 'SUCCESS' || TypingsStatus.status !== 'SUCCESS' || ModuleStatus.status !== 'SUCCESS') {\n            t.attrRange({ column: [5, 6] }, {\n                color: 'red'\n            });\n            t.attrRange({ column: [5, 6], row: [5, 6] }, {\n                color: 'red'\n            });\n        }\n        return t;\n    }\n\n\n    previewsVersions(previewsVersions: string[]) {\n        var t = new Table({\n            borderStyle: 2,\n            horizontalLine: true,\n            width: ['50%', '50%'],\n            rightPadding: 0,\n            leftPadding: 1\n        });\n\n        t.push(['Previews versions', 'Gateway']);\n        previewsVersions.forEach(v => {\n            t.push([v, `https://cloudflare-ipfs.com/ipfs/${v}`]);\n        });\n\n        t.attrRange({ row: [0, 1] }, {\n            align: 'center',\n            color: 'green',\n            bg: 'black'\n        });\n\n        t.attrRange({\n            row: [1],\n            column: [1]\n        }, {\n                leftPadding: 5\n            });\n\n        return t;\n    }\n\n    endInstallCommand(hash) {\n        const t = new Table({\n            borderStyle: 2,\n            horizontalLine: true,\n            width: ['50%'],\n            rightPadding: 0,\n            leftPadding: 1\n        });\n\n        t.push(['Install command']);\n        t.push([`rxdi i ${hash}`]);\n\n\n        t.attrRange({ row: [0, 1] }, {\n            align: 'center',\n            color: 'green',\n            bg: 'black'\n        });\n\n        t.attrRange({\n            row: [1],\n            column: [1]\n        }, {\n                leftPadding: 5\n            });\n\n        return t;\n    }\n\n    previewsNext(previewsVersions: string[]) {\n        var t = new Table({\n            borderStyle: 2,\n            horizontalLine: true,\n            width: ['50%', '50%'],\n            rightPadding: 0,\n            leftPadding: 1\n        });\n\n        t.push(['Previews version', 'Next version']);\n        let isNext = false;\n        let previews = [];\n        let next = [];\n        previewsVersions.forEach(v => {\n            if (isNext) {\n                isNext = false;\n                next.push(v);\n            } else {\n                previews.push(v);\n                isNext = true;\n            }\n        });\n        previews.forEach((v, index) => {\n            t.push([v, next[index]]);\n        });\n\n\n        t.attrRange({ row: [0, 1] }, {\n            align: 'center',\n            color: 'green',\n            bg: 'black'\n        });\n\n        t.attrRange({\n            row: [1],\n            column: [1]\n        }, {\n                leftPadding: 5\n            });\n\n        return t;\n    }\n\n    getHistoryTable(history: DagModel[]) {\n        var t = new Table({\n            borderStyle: 2,\n            horizontalLine: true,\n            width: [3, '50%', '50%'],\n            rightPadding: 0,\n            leftPadding: 1\n        });\n\n        t.push(['', 'Date', 'Hash']);\n        console.log(history);\n        history.forEach((v) => {\n            t.push(['', `${v.createdAt}`, `rxdi-deploy --find ${v.hash}`]);\n        });\n\n        t.attrRange({ row: [0, 1] }, {\n            align: 'center',\n            color: 'green',\n            bg: 'black'\n        });\n\n        t.attrRange({\n            row: [1],\n            column: [1]\n        }, {\n                leftPadding: 5\n            });\n\n        return t;\n    }\n\n\n    fileUploadStatus(file: IPFSFile[]) {\n        const t = new Table({\n            borderStyle: 2,\n            horizontalLine: true,\n            width: ['100%'],\n            rightPadding: 0,\n            leftPadding: 1\n        });\n\n        t.push(['File upload status']);\n        t.push([`\\File size: ${file[0].size} bytes`]);\n        t.push([`\\IPFS address: ${this.fileIpfsService.providers.cloudflare}${file[0].hash}`]);\n\n        t.attrRange({ row: [0, 1] }, {\n            align: 'center',\n            color: 'green',\n            bg: 'black'\n        });\n\n        t.attrRange({\n            row: [1],\n            column: [1]\n        }, {\n                leftPadding: 5\n            });\n\n        return t;\n    }\n\n\n}","import { Service, Inject } from '@rxdi/core';\nimport { FILE_DEPLOYMENT_STATUS, FILE_DEPLOYMENT_STATUS_INTERFACE } from './status-injection.tokens';\n\n@Service()\nexport class StatusService {\n\n    @Inject(FILE_DEPLOYMENT_STATUS) private $deploymentStatus: FILE_DEPLOYMENT_STATUS;\n\n    getBuildStatus() {\n        return this.$deploymentStatus.getValue();\n    }\n\n    setBuildStatus(status: FILE_DEPLOYMENT_STATUS_INTERFACE) {\n        this.$deploymentStatus.next({\n            ...this.$deploymentStatus.getValue(),\n            ...status\n        });\n    }\n}","import { Module } from \"@rxdi/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { START, FILE_DEPLOYMENT_STATUS, FILE_DEPLOYMENT_STATUS_INTERFACE } from './status-injection.tokens';\nimport { StatusService } from './status.service';\n\n@Module({\n    services: [\n        StatusService,\n        {\n            provide: START,\n            useValue: new BehaviorSubject(true)\n        },\n        {\n            provide: FILE_DEPLOYMENT_STATUS,\n            useValue: new BehaviorSubject(<FILE_DEPLOYMENT_STATUS_INTERFACE>{\n                file: {\n                    status: 'SUCCESS',\n                    message: 'success'\n                },\n                typings: {\n                    status: 'SUCCESS',\n                    message: 'success'\n                },\n                module: {\n                    status: 'SUCCESS',\n                    message: 'success'\n                }\n            })\n        }\n    ]\n})\nexport class StatusModule {}","import { Service, Inject } from '@rxdi/core';\nimport { Observable } from 'rxjs';\nimport { __BUILD_HISTORY_DATABASE, DagModel } from '../../../env.injection.tokens';\nimport { IHistoryType } from '../../core/api-introspection';\n\n@Service()\nexport class BuildHistoryService {\n    @Inject(__BUILD_HISTORY_DATABASE) private buildHistoryDatabase: __BUILD_HISTORY_DATABASE;\n    insert(doc: DagModel): Observable<DagModel> {\n        return new Observable(o => {\n            this.buildHistoryDatabase.insert(doc, (e, d) => {\n                if (e) {\n                    throw new Error('Unable to insert to database');\n                }\n                o.next(d);\n            });\n        })\n    }\n\n    find(doc: DagModel | {}): Observable<DagModel> {\n        return new Observable(o => {\n            this.buildHistoryDatabase.find(doc, (e, d) => {\n                if (e) {\n                    o.error(e);\n                }\n                o.next(d);\n            });\n        })\n    }\n\n    findAll(skip: number = 0, limit: number = 100, sort = {createdAt: -1}, where = {}): Promise<IHistoryType[]> {\n        return new Promise((resolve, reject) => {\n            this.buildHistoryDatabase\n                .find(where)\n                .sort(sort)\n                .skip(skip)\n                .limit(limit)\n                .exec((e, d: any) => {\n                    if (e) {\n                        reject(e);\n                    }\n                    resolve(d.map((doc)=>{\n                        doc.createdAt = new Date(doc.createdAt).valueOf();\n                        return doc;\n                      }).sort((a, b)=> b.createdAt - a.createdAt).map(doc => {\n                          doc.createdAt = new Date(doc.createdAt);\n                          return doc;\n                      }));\n                });\n        })\n    }\n\n}","import { Service } from '@rxdi/core';\n\n@Service()\nexport class ErrorReasonService {\n\n    moduleIntegrityError(oldHash, newHash) {\n        console.log(`Module is with the same integrity like in the previws version ${oldHash}`);\n        console.log(`To check this version write down following command rxdi-deploy --find ${newHash}`);\n        // console.log(`Nothing is deployed!`);\n    }\n\n}","import { Service, Inject } from '@rxdi/core';\nimport { Observable } from 'rxjs';\nimport { __PREVIWS_DATABASE, PreviousModel } from '../../../env.injection.tokens';\n\n@Service()\nexport class PreviousService {\n\n    @Inject(__PREVIWS_DATABASE) private previwsDatabase: __PREVIWS_DATABASE;\n\n    insert(doc: PreviousModel): Observable<PreviousModel> {\n        return new Observable(o => {\n            this.previwsDatabase.insert(doc, (e, d) => {\n                if (e) {\n                    throw new Error('Unable to insert to database');\n                }\n                o.next(d);\n            });\n        })\n    }\n\n    find(doc: PreviousModel): Observable<PreviousModel> {\n        return new Observable(o => {\n            this.previwsDatabase.find(doc, (e, d) => {\n                if (e) {\n                    o.error(e);\n                }\n                o.next(d);\n            });\n        })\n    }\n}","import { FileService } from '../file/file.service';\nimport { Service, Inject } from '@rxdi/core';\nimport { __DEPLOYER_OUTPUT_CONFIG_NAME } from '../../../env.injection.tokens';\nimport { includes } from '../helpers/helpers';\n\n@Service()\nexport class PackageJsonService {\n\n    defaultOutputConfig: __DEPLOYER_OUTPUT_CONFIG_NAME;\n\n    constructor(\n        private fileService: FileService,\n        @Inject(__DEPLOYER_OUTPUT_CONFIG_NAME) private deployerOutputConfigName: __DEPLOYER_OUTPUT_CONFIG_NAME\n    ) { }\n\n    OnInit() {\n        if (includes('--collect-packages')) {\n            this.defaultOutputConfig = 'package.json';\n        } else {\n            this.defaultOutputConfig = this.deployerOutputConfigName;\n        }\n    }\n\n    async prepareDependencies(path?: string) {\n        const file = await this.read(path);\n        if (file.dependencies) {\n            return Object.keys(file.dependencies).map(name => ({\n                name,\n                version: file.dependencies[name]\n            }))\n        }\n        return [];\n    }\n\n    async readModifyWrite(modifier: any = {}, path?: string) {\n        let file = await this.read(path);\n        file = { ...modifier, ...file };\n        return await this.write(file, path);\n    }\n\n    async read(path?: string) {\n        return JSON.parse(await this.fileService.readFile(path || `${process.cwd()}/${this.defaultOutputConfig}`))\n    }\n\n    async write(data, path?: string) {\n        return await this.fileService.writeFile(path || `${process.cwd()}/${this.defaultOutputConfig}`, JSON.stringify(data));\n    }\n\n}","import { Service, Inject } from \"@rxdi/core\";\nimport { __NAMESPACE_DB } from \"../../../../env.injection.tokens\";\nimport { INamespacetype } from '../../../core/api-introspection/index';\n\n@Service()\nexport class NamespaceService {\n\n    @Inject(__NAMESPACE_DB) private namespace: __NAMESPACE_DB;\n\n    getNamespace(name: string) {\n        return new Promise((resolve, reject) => {\n            this.namespace.find({ name })\n                .exec((e, d) => {\n                    if (e) {\n                        reject(e);\n                    }\n                    resolve(d);\n                });\n        });\n    }\n\n\n    getNamespaceById(_id: string) {\n        return new Promise((resolve, reject) => {\n            this.namespace.findOne({ _id }, (e, d) => {\n                if (e) {\n                    reject(e);\n                }\n                console.log(d);\n                resolve(d);\n            })\n        });\n    }\n\n    searchForDuplicates(name) {\n        return new Promise((resolve, reject) => {\n            this.namespace.findOne({ name }, (e, d) => {\n                if (e) {\n                    reject(e);\n                }\n                resolve(d);\n            })\n        });\n    }\n\n    async insert(doc: { name: string }) {\n        return await new Promise((resolve, reject) => {\n            this.namespace.insert(doc, (e, d) => {\n                if (e) {\n                    reject(e)\n                }\n                resolve(d);\n            });\n        });\n    }\n\n    listNamespaces(skip: number = 0, limit: number = 100, sort = {createdAt: -1}): Promise<INamespacetype[]> {\n        return new Promise((resolve, reject) => {\n            this.namespace\n                .find({})\n                .sort(sort)\n                .skip(skip)\n                .limit(limit)\n                .exec((e, d: any) => {\n                    if (e) {\n                        reject(e);\n                    }\n                    resolve(d);\n                });\n        });\n    }\n\n}","import { Service } from '@rxdi/core';\n\n@Service()\nexport class TimeService {\n\n    calculateTime(time: string) {\n        const date = new Date(time);\n        return {\n            day: this.getDay(date),\n            month: this.getDay(date),\n            year: this.getDay(date)\n        }\n    }\n\n    getDay(date: Date): number {\n        return date.getUTCDate();\n    }\n\n    getMonth(date: Date): number {\n        return date.getUTCDate();\n    }\n\n    getYear(date: Date): number {\n        return date.getUTCFullYear();\n    }\n\n}","import { Service } from '@rxdi/core';\n\n@Service()\nexport class HtmlTemplateBuilder {\n    // createTemplateFromModule()\n}","export * from './file/file-user.service';\nexport * from './file/file.service';\nexport * from './ipfs-file/ipfs-file.service';\nexport * from './parcel-bundler/parcel-bundler.service';\nexport * from './arguments/arguments.service';\nexport * from './dts-generator/dts-generator.service';\nexport * from './tsconfig-generator/tsconfig-generator.service';\nexport * from './table-service/table-service';\nexport * from './build-history/build-history.service';\nexport * from './previous/previous.service';\nexport * from './error-reason/error-reason.service';\nexport * from './time/time.service';\nexport * from './package-json/package-json.service';\nexport * from './html-template-builder/html-template-builder.service';\nexport * from './helpers/helpers';\nexport * from './logger/logger.service';","import { Service } from \"@rxdi/core\";\nimport { switchMap } from \"rxjs/operators\";\nimport { stat, Stats, readdir } from \"fs\";\nimport { includes } from \"../../../services\";\nimport { resolve } from \"path\";\nimport { from } from \"rxjs\";\n\n@Service()\nexport class FileService {\n    units = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    results: string[] = [];\n\n    async wholeReadDirRecursive(path: string = '.') {\n        const directory = await this.readDir(path);\n        const pathinternal = path;\n        const self = this;\n        return (await Promise.all(directory.map(async file => {\n            const path = resolve(pathinternal, file);\n            const stat = await this.statAsync(path);\n            if (stat && stat.isDirectory()) {\n                if (!file.includes('node_modules')) {\n                    await self.wholeReadDirRecursive.bind(this)(path);\n                } else {\n                    return null;\n                }\n            } else {\n                this.results = [...this.results, path];\n            }\n        }))).filter(a => !!a);\n    }\n\n    async readCurrentDirFlat(path: string = '.') {\n        return (await this.readDir(path)).map(file => resolve(path, file)).filter(a => !!a);\n    }\n\n    async listFolder(folder: string) {\n        return await new Promise((resolve, reject) => {\n            from(this.readCurrentDirFlat(folder))\n                .pipe(\n                    switchMap((res) => this.map(res))\n                )\n                .subscribe(res => resolve(res), e => reject(e));\n        });\n    }\n\n    async readDir(folder: string, limit: number = 200) {\n        return await new Promise<string[]>((resolve, reject) => {\n            readdir(folder, (err, list: string[]) => {\n                if (err) {\n                    resolve([]);\n                } else {\n                    let count = 0;\n                    resolve(list.map(f => {\n                        count++;\n                        if (limit > count) {\n                            return f;\n                        } else {\n                            return null;\n                        }\n              \n                    }).filter(res => !!res));\n\n                }\n            });\n        });\n    }\n\n    async map(res) {\n        let foldersCount = 100;\n        let counter = 0;\n        return (await Promise.all(res.map(async (r) => {\n            counter++;\n            const mapping = {\n                path: r,\n                directory: null,\n                file: null,\n                name: null,\n                status: null\n            };\n            const status: Stats = await this.statAsync(r);\n            const pathMapping = (v) => r.replace(process.cwd(), v);\n\n            if (!status.isDirectory || status && status['prototype'] === String) {\n                return null;\n            }\n            if (status.isDirectory()) {\n                mapping.directory = true;\n            } else {\n                mapping.file = true;\n            }\n            mapping.name = r.split(\"/\").pop();\n            mapping.path = pathMapping('.');\n\n            if (includes('--enable-full-folder-access')) {\n                mapping.path = r;\n            }\n\n            mapping.status = status;\n            mapping.status.size = this.niceBytes(status.size);\n            if (counter === foldersCount) {\n                return null;\n            }\n            return mapping;\n        }))).filter(res => !!res);\n    }\n\n    private niceBytes(x) {\n        let l = 0, n = parseInt(x, 10) || 0;\n        while (n >= 1024 && ++l)\n            n = n / 1024;\n        return (n.toFixed(n >= 10 || l < 1 ? 0 : 1) + ' ' + this.units[l]);\n    }\n\n    async statAsync(path: string): Promise<any> {\n        return await new Promise((resolve, reject) => {\n            stat(path, (e, stats) => {\n                if (e) {\n                    resolve(e);\n                }\n                resolve(stats);\n            })\n        });\n    }\n\n}\n","import {\n  __FOLDER,\n  __IPFS_NODE_RESOLUTION_TIME,\n  __FILE_NAME,\n  __DEPLOYER_OUTPUT_CONFIG_NAME,\n  __NAMESPACE,\n  DagModel,\n  __COMMIT_MESSAGE,\n  __FILE_EXTENSION\n} from '../../../env.injection.tokens';\nimport { Inject, BootstrapLogger, PluginInterface, Plugin } from '@rxdi/core';\nimport { tap, switchMapTo, take, map, switchMap } from 'rxjs/operators';\nimport { interval, from, of, combineLatest } from 'rxjs';\nimport { FileUserService } from '../../services/file/file-user.service';\nimport { IPFSFile } from '@gapi/ipfs';\nimport { ParcelBundlerService } from '../../services/parcel-bundler/parcel-bundler.service';\nimport { FileIpfsService } from '../../services/ipfs-file/ipfs-file.service';\nimport { FileService as CoreFileService } from '../../services/file/file.service';\nimport { TypescriptDefinitionGeneratorService } from '../../services/dts-generator/dts-generator.service';\nimport { TsConfigGenratorService } from '../../services/tsconfig-generator/tsconfig-generator.service';\nimport { TableService } from '../../services/table-service/table-service';\nimport { BuildHistoryService } from '../../services/build-history/build-history.service';\nimport { PreviousService } from '../../services/previous/previous.service';\nimport { ErrorReasonService } from '../../services/error-reason/error-reason.service';\nimport { StatusService } from '../../status/status.service';\nimport { PackageJsonService } from '../../services/package-json/package-json.service';\nimport { includes, nextOrDefault } from '../../services/helpers/helpers';\nimport { NamespaceService } from '../../server/namespace/services/namespace.service';\nimport { FileService } from '../../server/file/services/file.service';\n\n@Plugin()\nexport class CompilePlugin implements PluginInterface {\n  @Inject(__FILE_NAME) private fileName: __FILE_NAME;\n  @Inject(__FOLDER) private folder: __FOLDER;\n  @Inject(__IPFS_NODE_RESOLUTION_TIME)\n  private resolutionTime: __IPFS_NODE_RESOLUTION_TIME;\n  @Inject(__DEPLOYER_OUTPUT_CONFIG_NAME)\n  private outputConfigName: __DEPLOYER_OUTPUT_CONFIG_NAME;\n  @Inject(__NAMESPACE) private namespace: __NAMESPACE;\n  @Inject(__COMMIT_MESSAGE) private commitMessage: __COMMIT_MESSAGE;\n  @Inject(__FILE_EXTENSION) private extension: __FILE_EXTENSION;\n  fileNotDeployed: string = '';\n  initIpfsModule = [\n    {\n      size: 0,\n      hash: this.fileNotDeployed,\n      path: this.fileNotDeployed,\n      content: this.fileNotDeployed\n    }\n  ];\n  constructor(\n    private parcelBundler: ParcelBundlerService,\n    private logger: BootstrapLogger,\n    private ipfsFile: FileIpfsService,\n    private fileService: CoreFileService,\n    private fileUserService: FileUserService,\n    private typingsGenerator: TypescriptDefinitionGeneratorService,\n    private tsConfigGenerator: TsConfigGenratorService,\n    private tableService: TableService,\n    private buildHistoryService: BuildHistoryService,\n    private previousService: PreviousService,\n    private namespaceService: NamespaceService,\n    private errorReasonService: ErrorReasonService,\n    private statusService: StatusService,\n    private packageJsonService: PackageJsonService,\n    private internalFileService: FileService\n  ) {}\n\n  async register() {\n    if (includes('--webui') || includes('--node-only')) {\n      return await Promise.resolve();\n    }\n    if (this.isJavascriptCompilation()) {\n      return await this.compile();\n    }\n    return await new Promise(resolve => {\n      this.writeOtherFile(`${this.folder}${this.fileName}`)\n        .pipe(\n          tap(r => this.logSuccess(r)),\n          switchMapTo(interval(1000)),\n          take(this.resolutionTime),\n          map(v => this.resolutionTime - 1 - v)\n        )\n        .subscribe(\n          counter => {\n            if (!counter) {\n              resolve(true);\n              process.exit(0);\n            }\n          },\n          e => {\n            this.logger.error(e);\n            process.exit(1);\n          }\n        );\n    });\n  }\n\n  isJavascriptCompilation() {\n    return !!['.ts', '.js', '.tsx'].filter(e => e === this.extension).length;\n  }\n\n  async compile() {\n    return this.completeBuildAndAddToIpfs(\n      this.folder,\n      this.fileName,\n      this.commitMessage,\n      this.namespace,\n      this.outputConfigName\n    )\n      .pipe(\n        tap(r => this.logSuccess(r)),\n        switchMapTo(interval(1000)),\n        take(this.resolutionTime),\n        map(v => this.resolutionTime - 1 - v)\n      )\n      .subscribe(\n        counter => {\n          if (!counter) {\n            process.exit(0);\n          }\n        },\n        e => {\n          this.logger.error(e);\n          process.exit(1);\n        }\n      );\n  }\n\n  parcelBuild(path: string, outDir = null, fileName: string) {\n    return this.parcelBundler.prepareBundler(path, outDir, fileName);\n  }\n\n  async createCommitMessage(message: string = '') {\n    if (includes('--html')) {\n      let file;\n      const filePath = nextOrDefault('--html', './index.html');\n      try {\n        file = await this.fileService.readFileRaw(filePath);\n      } catch (e) {\n        console.log(`\nError loading file ${filePath}\n                `);\n        process.exit(0);\n      }\n      return await this.ipfsFile.addRawFile(file);\n    } else {\n      if (!!message && !message.includes('--') && !message.includes('-')) {\n        return await this.ipfsFile.addFile(message);\n      } else {\n        return await Promise.resolve(this.initIpfsModule);\n      }\n    }\n  }\n\n  completeBuildAndAddToIpfs(\n    folder: string,\n    file: string,\n    message,\n    namespace: string,\n    outputConfigName: __DEPLOYER_OUTPUT_CONFIG_NAME,\n    buildFolder = './build'\n  ) {\n    let ipfsFile: IPFSFile[];\n    let ipfsModule: IPFSFile[];\n    let ipfsTypings: IPFSFile[] = this.initIpfsModule;\n    let ipfsMessage: IPFSFile[] = this.initIpfsModule;\n    let ipfsFileMetadata: IPFSFile[] = this.initIpfsModule;\n    let currentModule: DagModel;\n    let dag: DagModel;\n    this.logger.log('Bundling Started!\\n');\n    return from(\n      this.parcelBuild(\n        folder + '/' + file,\n        buildFolder,\n        `${file.split('.')[0]}.js`\n      )\n    ).pipe(\n      tap(() => {\n        this.logger.log('Bundling finished!\\n');\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Bundling finished' });\n        this.logger.log(`Adding commit message ${message}...\\n`);\n      }),\n      switchMap(async () => this.createCommitMessage(message)),\n      tap(res => {\n        ipfsMessage = res;\n        this.logger.log(`Commit message added...\\n`);\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Commit message added' });\n      }),\n      switchMap(() =>\n        this.fileService.readFile(`${buildFolder}/${file.split('.')[0]}.js`)\n      ),\n      tap(() => {\n        this.logger.log(\n          `Reading bundle ${buildFolder}/${file.split('.')[0]}.js finished!\\n`\n        );\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Reading bundle finished' });\n      }),\n      switchMap((res: string) => this.ipfsFile.addFile(res)),\n      tap(res => {\n        ipfsFile = res;\n        this.logger.log(\n          `Bundle added to ipfs ${buildFolder}/${file.split('.')[0]}.js\\n`\n        );\n        this.logger.log(`Typescript definitions merge started!\\n`);\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Typescript definitions merge starte' });\n      }),\n      switchMap(() =>\n        from(\n          this.typingsGenerator.mergeTypings(\n            namespace,\n            folder,\n            `${buildFolder}/index.d.ts`\n          )\n        )\n      ),\n      tap(() =>\n        this.logger.log(\n          `Typescript definitions merge finished! Reading file...\\n`\n        )\n      ),\n      switchMap(() => this.fileService.readFile(`${buildFolder}/index.d.ts`)),\n      tap(() =>\n        this.logger.log(\n          `Typescript definitions read finished! Adding to IPFS...\\n`\n        )\n      ),\n      switchMap((res: string) => {\n        if (!!res) {\n          return this.ipfsFile.addFile(res);\n        } else {\n          this.statusService.setBuildStatus({\n            typings: {\n              status: 'WARNING',\n              message:\n                'Missing typescript definition.Typings will not be uploaded!'\n            }\n          });\n          return Promise.resolve(this.initIpfsModule);\n        }\n      }),\n      tap(res => {\n        ipfsTypings = res;\n        if (ipfsTypings[0].hash) {\n          this.logger.log(\n            `Typescript definitions added to IPFS! Adding module configuration...\\n`\n          );\n        }\n      }),\n      switchMap(() =>\n        this.fileService.readFilePromisifyFallback(\n          `${folder}/${outputConfigName}`\n        )\n      ),\n      switchMap(async (d: string) => {\n        try {\n          dag = JSON.parse(d);\n        } catch (e) {\n          throw new Error(\n            `Cannot parse ${outputConfigName} from root directory!`\n          );\n        }\n        currentModule = {\n          name: namespace,\n          module: ipfsFile[0].hash,\n          createdAt: new Date()\n        };\n\n        if (ipfsTypings[0].hash) {\n          currentModule.typings = ipfsTypings[0].hash;\n        }\n\n        if (ipfsMessage[0].hash) {\n          currentModule.message = ipfsMessage[0].hash;\n        }\n\n        if (ipfsFileMetadata[0].hash) {\n          currentModule.metadata = ipfsFileMetadata[0].hash;\n        }\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Bundldadada' });\n\n        currentModule.previous = [...(dag.previous || [])];\n        let f: {\n          dependencies?: string[];\n          ipfs?: { provider: string; dependencies: string[] }[];\n        } = { ipfs: [] };\n        if (\n          await this.internalFileService.statAsync(\n            `${folder}/${outputConfigName}`\n          )\n        ) {\n          this.logger.log(\n            `Reactive file present ${outputConfigName} package dependencies will be taken from it`\n          );\n          try {\n            f = JSON.parse(\n              await this.fileService.readFile(`${folder}/${outputConfigName}`)\n            );\n          } catch (e) {\n            throw new Error(\n              `Cannot parce reactive file at ${folder}/${outputConfigName}`\n            );\n          }\n          if (f.dependencies) {\n            currentModule.dependencies = f.dependencies;\n          }\n          const dependencies: string[] = [];\n          if (f.ipfs && f.ipfs.length) {\n            f.ipfs.forEach(p =>\n              p.dependencies.forEach(d => dependencies.push(d))\n            );\n            if (dependencies.length) {\n              currentModule.dependencies = dependencies;\n            }\n          }\n        }\n        this.logger.log(\n          `Current module before deploy ${JSON.stringify(currentModule)}`\n        );\n        if (includes('--collect-packages')) {\n          const packages = await this.packageJsonService.prepareDependencies(\n            `${folder}/package.json`\n          );\n          if (packages.length) {\n            currentModule.packages = packages;\n          }\n        }\n\n        ipfsModule = await this.ipfsFile.addFile(\n          JSON.stringify(currentModule, null, 2)\n        );\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Module added to ipfs' });\n\n        if (currentModule.previous.length >= 20) {\n          currentModule.previous.shift();\n        }\n        currentModule.previous = [\n          ...currentModule.previous,\n          ipfsModule[0].hash\n        ];\n        if (f.ipfs) {\n          currentModule.ipfs = f.ipfs;\n        }\n        await this.fileUserService.writeDag(\n          `${folder}/${outputConfigName}`,\n          JSON.stringify(currentModule, null, 2)\n        );\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Dag written' });\n        // this.integrityCheck(dag, ipfsFile, ipfsTypings);\n        return ipfsModule;\n      }),\n      tap(() => this.logger.log(`Module configuration added to ipfs!\\n`)),\n      switchMap(async () => {\n        let nmspc = await this.namespaceService.searchForDuplicates(namespace);\n        if (!nmspc) {\n          nmspc = await this.namespaceService.insert({\n            name: namespace\n          });\n        }\n        return nmspc;\n      }),\n      switchMap(nmspc =>\n        combineLatest([\n          this.buildHistoryService.insert(<DagModel>{\n            status: {\n              file: this.statusService.getBuildStatus().file,\n              typings: this.statusService.getBuildStatus().typings,\n              module: this.statusService.getBuildStatus().module\n            },\n            hash: ipfsModule[0].hash,\n            name: namespace,\n            typings: ipfsTypings[0].hash,\n            module: ipfsFile[0].hash,\n            metadata: ipfsFileMetadata[0].hash,\n            message: ipfsMessage[0].hash,\n            namespaceId: nmspc['_id']\n          }),\n          this.previousService.insert({\n            name: namespace,\n            hash: ipfsModule[0].hash\n          })\n        ])\n      ),\n      map(() => ({\n        file: ipfsFile,\n        typings: ipfsTypings,\n        module: ipfsModule\n      })),\n      tap(async () => {\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Module saved to persisten history!' });\n\n        this.logger.log('Module saved to persistant history!');\n        if (!ipfsModule) {\n          this.fileNotAddedToIpfs(ipfsModule);\n        }\n        console.log(\n          '' + this.tableService.previewsVersions(currentModule.previous)\n        );\n        console.log(\n          '' + this.tableService.previewsNext(currentModule.previous)\n        );\n        console.log(\n          '' + this.tableService.endInstallCommand(ipfsModule[0].hash)\n        );\n        console.log(\n          '' + this.tableService.createTable(ipfsFile, ipfsTypings, ipfsModule)\n        );\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: 'Bundle finished' });\n        // this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: `Ipfs file can be found at ${ipfsModule[0].hash}` });\n        const returnItemByIndex = (i: number) =>\n          currentModule.previous[currentModule.previous.length - i];\n        await this.showError(returnItemByIndex(2), returnItemByIndex(1));\n      })\n    );\n  }\n\n  fileNotAddedToIpfs(file: IPFSFile[]) {\n    console.log(`File not added to ipfs for ${JSON.stringify(file)}`);\n    console.log(\n      `More info can be found executing command: rxdi-deploy --find ${\n        file[0].hash\n      }`\n    );\n  }\n\n  integrityCheck(dag: DagModel, file: IPFSFile[], typings: IPFSFile[]) {\n    const genericIntegrityError =\n      'Integrity is same like in the previews version!';\n    console.log(dag.module, file[0].hash);\n    if (dag.module === file[0].hash) {\n      this.logger.log(`\n        !! Warning !!\n        Module is with the same integrity and will not be uploaded again!\n        You need to make change to the module so it will be with different integrity!\n            `);\n      this.statusService.setBuildStatus({\n        file: {\n          status: 'WARNING',\n          message: genericIntegrityError\n        },\n        module: {\n          status: 'WARNING',\n          message: genericIntegrityError\n        }\n      });\n    }\n\n    if (dag.typings === typings[0].hash) {\n      this.logger.log(`\n        !! Warning !!\n        Typings are with the same integrity and will not be uploaded again!\n        You need to make change to the module so it will be with different integrity!\n            `);\n      this.statusService.setBuildStatus({\n        typings: {\n          status: 'WARNING',\n          message: genericIntegrityError\n        }\n      });\n    }\n  }\n\n  async showError(oldHash, newHash: string) {\n    return await new Promise(resolve => {\n      if (\n        Object.keys(this.statusService.getBuildStatus()).filter(\n          k => this.statusService.getBuildStatus()[k].status !== 'SUCCESS'\n        ).length\n      ) {\n        this.errorReasonService.moduleIntegrityError(oldHash, newHash);\n      }\n      setTimeout(() => {\n        resolve();\n      }, 1000);\n    });\n  }\n\n  writeOtherFile(file) {\n    return from(this.fileService.readFileRaw(file)).pipe(\n      switchMap(content => this.ipfsFile.addRawFile(content)),\n      tap(c => {\n        console.log('' + this.tableService.fileUploadStatus(c));\n      })\n    );\n  }\n  logSuccess(res) {\n    // this.logger.log(`Success deploying module! Package added to IPFS: ${JSON.stringify(res, null, 4)}`);\n    console.log(\n      `Deploy finish ipfs node will shutdown in: ${this.resolutionTime} seconds`\n    );\n  }\n\n  completeBuildAndAddToIpfs2(namespace: string = '@gapi/core') {\n    const fileName = 'index';\n    let ipfsFile: IPFSFile[];\n    return from(\n      this.fileUserService.writeFile(\n        `\nimport { Service } from '@rxdi/core';\n\n@Service()\nexport class Pesho {\n    constructor() {\n        console.log('THIS IS PESHO SERVICE');\n    }\n}\n        \n        `,\n        fileName + '.ts',\n        namespace\n      )\n    ).pipe(\n      switchMap(() =>\n        from(\n          this.fileUserService.writeFile(\n            this.tsConfigGenerator.getTsConfig(fileName),\n            'tsconfig.json',\n            namespace\n          )\n        )\n      ),\n      switchMap(() =>\n        from(\n          this.parcelBundler.prepareBundler(\n            `./build/${namespace}/${fileName}.ts`\n          )\n        )\n      ),\n      switchMap(() => this.fileService.readFile(`./build/${fileName}.js`)),\n      switchMap((res: string) => this.ipfsFile.addFile(res)),\n      tap(res => (ipfsFile = res)),\n      switchMap(() =>\n        from(\n          this.typingsGenerator.mergeTypings(\n            namespace,\n            `./build/${namespace}`,\n            './build/index.d.ts'\n          )\n        )\n      ),\n      switchMap(() => of(ipfsFile))\n    );\n  }\n}\n","import { HAPI_SERVER } from '@rxdi/hapi';\nimport { Inject, Service, OnInit } from '@rxdi/core';\nimport { Server } from 'hapi';\nimport { __ROOT_FOLDER } from '../../../env.injection.tokens';\nimport { includes } from '../../services';\n\n@Service()\nexport class WebUiService implements OnInit {\n\n    constructor(\n        @Inject(HAPI_SERVER) private server: Server,\n        @Inject(__ROOT_FOLDER) private root_folder: __ROOT_FOLDER\n    ) { }\n\n    OnInit() {\n        includes('--webui') ? this.register() : null;\n    }\n\n    async register() {\n        this.server.route({\n            method: 'GET',\n            path: '/webui/{param*}',\n            handler: {\n                directory: {\n                    path: `${this.root_folder}/webui`,\n                    listing: true,\n                    index: ['index.html']\n                }\n            }\n        });\n    }\n\n}","\nimport { PluginInterface, Inject, ExitHandlerService, AfterStarterService, Service } from '@rxdi/core';\nimport { createServer, Server, IncomingMessage, ServerResponse } from 'http';\nimport { Server as HapiServer } from 'hapi';\nimport { HAPI_SERVER, OpenService } from '@rxdi/hapi';\nimport { Subject, Observable, timer } from 'rxjs';\nimport { tap, filter, take, switchMapTo } from 'rxjs/operators';\nimport { includes, nextOrDefault } from '../../services';\n\n@Service()\nexport class ServerPushService implements PluginInterface {\n\n    serverWatcher: Server;\n    connected: boolean;\n    sendToClient: Subject<any> = new Subject();\n    sendTime: Subject<boolean> = new Subject();\n    clientConnected: Subject<boolean> = new Subject();\n\n    constructor(\n        @Inject(HAPI_SERVER) private server: HapiServer,\n        private exitHandler: ExitHandlerService,\n        private afterStarterService: AfterStarterService,\n        private openService: OpenService\n    ) {\n        this.exitHandler.errorHandler.subscribe(async (e) => await this.stopServerWatcher());\n\n        // this.server.events.on('response',\n        //     (request) => this.sendToClient.next({ query: request.payload, response: request.response['source'] })\n        // );\n        const interval = nextOrDefault('--server-push-interval', 1000 * 7, (a) => Number(a * 1000));\n        timer(0, interval).pipe(tap(() => this.sendTime.next(true))).subscribe();\n\n        this.afterStarterService.appStarted\n            .pipe(\n                switchMapTo(this.waitXSeconds(5)),\n                take(1),\n                filter(() => !this.connected),\n                filter(() => includes('--open-browser')),\n                tap(() => this.openService.openPage(`http://${this.server.info.address}:${this.server.info.port}/webui`))\n            ).subscribe();\n    }\n\n    waitXSeconds(sec): Observable<any> {\n        return Observable.create((o) => {\n            const timeout = setTimeout(() => o.next(true), sec * 1000);\n            return () => clearTimeout(timeout);\n        });\n    }\n\n    OnInit() {\n        this.register();\n    }\n\n    async register() {\n        if (includes('--webui-server-watcher') || includes('--webui')) {\n            this.createServerWatcher();\n        }\n    }\n\n    async stopServerWatcher() {\n        return await new Promise((resolve) => this.serverWatcher.close(() => resolve()));\n    }\n\n    private createServerWatcher() {\n        this.serverWatcher = createServer(this.OnRequest.bind(this));\n        this.serverWatcher.listen(nextOrDefault('--webui-server-watcher-port', 8957));\n    }\n\n    OnRequest(req: IncomingMessage, res: ServerResponse) {\n        if (req.url === '/status') {\n            if (!this.connected) {\n                this.clientConnected.next(true);\n                res.write('data: ' + JSON.stringify({ response: { init: true } }) + '\\n\\n');\n            }\n            this.connected = true;\n\n            res.writeHead(200, {\n                'Content-Type': 'text/event-stream',\n                'Access-Control-Allow-Origin': '*',\n                'Cache-Control': 'no-cache',\n                'Connection': 'keep-alive'\n            });\n\n            this.sendToClient.subscribe((data) => res.write('data: ' + JSON.stringify(data) + '\\n\\n'));\n\n            this.sendTime.subscribe(\n                (data) => res.write('data: ' + JSON.stringify({ time: new Date().toLocaleTimeString() }) + '\\n\\n')\n            );\n\n            this.sendTime.subscribe(\n                (data) => res.write('data: ' + JSON.stringify({ config: { graphql: {}, hapi: this.server.info } }) + '\\n\\n')\n            );\n            req.on('end', () => {\n                this.connected = false;\n                req.destroy();\n            });\n            return;\n        }\n        res.statusCode = 400;\n        return res.end();\n    }\n\n}","import { GraphQLObjectType, GraphQLString } from 'graphql';\n\nexport const UserType = new GraphQLObjectType({\n    name: 'UserType',\n    fields: {\n        message: {\n            type: GraphQLString\n        }\n    }\n});","import { Controller } from '@rxdi/core';\nimport { Type, Query, Subscription, Subscribe, PubSubService } from '@gapi/core';\nimport { GraphQLString } from 'graphql';\nimport { UserType } from './types/user.type';\n\n@Controller()\nexport class UserQueriesController {\n    \n    constructor(\n        private pubsub: PubSubService\n    ) {\n    }\n\n    @Type(UserType)\n    @Query({\n        message: {\n            type: GraphQLString\n        }\n    })\n    async findUser(root, { message }) {\n        return {\n            message\n        }\n    }\n\n    @Type(UserType)\n    @Subscribe((self: UserQueriesController) => self.pubsub.asyncIterator('CREATE_SIGNAL_BASIC'))\n    @Subscription()\n    subscribeToUserMessagesBasic({message}: {message: string}) {\n        return { message };\n    }\n}","import { GraphQLObjectType, GraphQLString } from \"graphql\";\n\n\nexport const BuildStatus = new GraphQLObjectType({\n    name: 'BuildStatus',\n    fields: {\n        status: {\n            type: GraphQLString\n        },\n        message: {\n            type: GraphQLString\n        }\n    }\n});\nexport const BuildStatusType = new GraphQLObjectType({\n    name: 'BuildStatusType',\n    fields: {\n        file: {\n            type: BuildStatus\n        },\n        typings: {\n            type: BuildStatus\n        },\n        module: {\n            type: BuildStatus\n        }\n    }\n});\n","import { GraphQLObjectType, GraphQLString } from \"graphql\";\nimport { BuildStatusType } from \"../../build/types/built-status.type\";\n// import { HistoryPackageType } from \"./history-package.type\";\n// import { HistoryIpfsType } from \"./history-ipfs.type\";\n\nexport const HistoryType = new GraphQLObjectType({\n    name: 'HistoryType',\n    fields: {\n        _id: {\n            type: GraphQLString\n        },\n        name: {\n            type: GraphQLString\n        },\n        typings: {\n            type: GraphQLString\n        },\n        module: {\n            type: GraphQLString\n        },\n        metadata: {\n            type: GraphQLString\n        },\n        message: {\n            type: GraphQLString\n        },\n        hash: {\n            type: GraphQLString\n        },\n        status: {\n            type: BuildStatusType\n        },\n        namespaceId: {\n            type: GraphQLString\n        },\n        createdAt: {\n            type: GraphQLString\n        },\n        updatedAt: {\n            type: GraphQLString\n        }\n        // previews: {\n        //     type: new GraphQLList(GraphQLString)\n        // },\n        // dependencies: {\n        //     type: new GraphQLList(GraphQLString)\n        // },\n        // packages: {\n        //     type: new GraphQLList(HistoryPackageType)\n        // },\n        // ipfs: {\n        //     type: new GraphQLList(HistoryIpfsType)\n        // },\n    }\n});","import { Controller, Subscription, Subscribe, Type, PubSubService } from \"@gapi/core\";\nimport { HistoryType } from \"./types/history.type\";\n\n@Controller()\nexport class HistorySubscriptionController {\n\n    constructor(\n        private pubsub: PubSubService,\n    ) { }\n\n    @Type(HistoryType)\n    @Subscribe((self: HistorySubscriptionController) => self.pubsub.asyncIterator('LISTEN_FOR_BUILDS'))\n    @Subscription()\n    listenForNewBuilds(payload) {\n        return { payload };\n    }\n\n}","import { Module } from '@rxdi/core';\nimport { HistorySubscriptionController } from './history-subscription.controller';\n\n@Module({\n    controllers: [\n        HistorySubscriptionController\n    ]\n})\nexport class HistoryModule {}","import { Service } from '@rxdi/core';\nimport { CompilePlugin } from '../../plugins/compile/compile.plugin';\n\n@Service()\nexport class CompileService {\n\n    constructor(\n        private compilePlugin: CompilePlugin\n    ) {\n    }\n\n    buildFile(folder: string = './packages/', file: string = 'index.ts', message: string = 'bla bla', namespace: string = '@pesho', buildFolder) {\n        return this.compilePlugin.completeBuildAndAddToIpfs(folder, file, message, namespace, 'reactive.json', buildFolder);\n    }\n}","import { GraphQLObjectType, GraphQLString, GraphQLList } from \"graphql\";\nimport { HistoryType } from \"../../history/types/history.type\";\nimport { Container } from \"@rxdi/core\";\nimport { BuildHistoryService } from \"../../../services\";\n\nexport const NamespaceType = new GraphQLObjectType({\n    name: 'Namespacetype',\n    fields: {\n        _id: {\n            type: GraphQLString\n        },\n        name: {\n            type: GraphQLString\n        },\n        builds: {\n            type: new GraphQLList(HistoryType),\n            resolve: async (root) => {\n                const buildHistoryService = Container.get(BuildHistoryService);\n                return await buildHistoryService.findAll(0, 100, null, { namespaceId: root._id})\n            }\n        }\n    }\n});","import { GraphQLObjectType, GraphQLList, GraphQLInt } from \"graphql\";\nimport { NamespaceType } from './namespace.type';\n\nexport const NamespaceListType = new GraphQLObjectType({\n    name: 'NamespaceListType',\n    fields: {\n        count: {\n            type: GraphQLInt\n        },\n        rows: {\n            type: new GraphQLList(NamespaceType)\n        }\n    }\n});","import { Query, Controller, Type, GraphQLString, GraphQLInt, Mutation } from \"@gapi/core\";\nimport { NamespaceType } from './types/namespace.type';\nimport { NamespaceService } from \"./services/namespace.service\";\nimport { NamespaceListType } from './types/namespace-list.type';\nimport { INamespaceListType } from \"../../core/api-introspection\";\n\n@Controller()\nexport class NamespaceController {\n\n    constructor(\n        private namespaceService: NamespaceService\n    ) { }\n\n    @Type(NamespaceType)\n    @Query({\n        id: {\n            type: GraphQLString\n        }\n    })\n    getNamespace(root, { id }) {\n        return this.namespaceService.getNamespaceById(id);\n    }\n\n    @Type(NamespaceType)\n    @Mutation({\n        name: {\n            type: GraphQLString\n        }\n    })\n    async insertNamespace(root, { name }) {\n        const namespace = await this.namespaceService.searchForDuplicates(name);\n        if (namespace) {\n            throw new Error('Namespace already exists!');\n        }\n        return await this.namespaceService.insert({ name });\n    }\n\n    @Type(NamespaceListType)\n    @Query({\n        skip: {\n            type: GraphQLInt\n        },\n        limit: {\n            type: GraphQLInt\n        },\n    })\n    async listNamespaces(root, { skip, limit }): Promise<INamespaceListType> {\n        const namespaces = await this.namespaceService.listNamespaces(skip, limit);\n        return {\n            count: namespaces.length,\n            rows: namespaces\n        }\n    }\n\n}","import { Module } from \"@rxdi/core\";\nimport { NamespaceController } from \"./namespace.controller\";\nimport { NamespaceService } from './services/namespace.service';\n\n@Module({\n    controllers: [NamespaceController],\n    services: [NamespaceService]\n})\nexport class NamespaceModule {}","import { GraphQLObjectType, GraphQLString } from \"graphql\";\n\nexport const BuildType = new GraphQLObjectType({\n    name: 'BuildType',\n    fields: {\n        status: {\n            type: GraphQLString\n        }\n    }\n});","import { GraphQLObjectType, GraphQLList, GraphQLInt } from \"graphql\";\nimport { HistoryType } from \"./history.type\";\n\nexport const HistoryListType = new GraphQLObjectType({\n    name: 'HistoryListType',\n    fields: {\n        count: {\n            type: GraphQLInt\n        },\n        rows: {\n            type: new GraphQLList(HistoryType)\n        }\n    }\n});","import { GraphQLString, GraphQLObjectType } from \"@gapi/core\";\n\nexport const ProcessStdOutType = new GraphQLObjectType({\n    name: 'ProcessStdOutType',\n    fields: {\n        stdout: {\n            type: GraphQLString\n        }\n    }\n});\n","import { Type, Controller, Mutation, GraphQLString, GraphQLNonNull, Query, GraphQLInt, GraphQLInputObjectType, Subscribe, Subscription, PubSubService } from \"@gapi/core\";\nimport { BuildType } from './types/build.type';\nimport { CompileService } from \"../services/compile.service\";\nimport { IHistoryListType } from \"../../core/api-introspection\";\nimport { BuildHistoryService, FileService, TsConfigGenratorService, LoggerService } from \"../../services\";\nimport { HistoryListType } from '../history/types/history-list.type';\nimport { BuildStatusType } from './types/built-status.type';\nimport { ProcessStdOutType } from './types/process.type';\nimport { createWriteStream } from \"fs\";\nimport { format } from \"util\";\nimport { Subscription as rxjsSubscription } from \"rxjs\";\n\n@Controller()\nexport class BuildController {\n\n    constructor(\n        private compileService: CompileService,\n        private buildHistoryService: BuildHistoryService,\n        private pubsub: PubSubService,\n        private fileService: FileService,\n        private tsGenerator: TsConfigGenratorService,\n        private loggerService: LoggerService\n    ) { }\n\n    @Type(BuildType)\n    @Mutation({\n        folder: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n        file: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n        message: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n        namespace: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n        buildFolder: {\n            type: GraphQLString\n        }\n    })\n    async triggerBuild(root, { folder, file, message, namespace, buildFolder }) {\n        return new Promise(async (resolve, reject) => {\n            await this.fileService.writeFile(folder + '/tsconfig.json', this.tsGenerator.getTsConfig(file.replace('.ts', '')));\n            const log_file = createWriteStream(`${folder}/${file}.log`, { flags: 'w' });\n            const subscription = this.loggerService.stdout.subscribe(log => {\n                log_file.write(format(log) + '\\n');\n                this.pubsub.publish('CREATE_SIGNAL_BASIC', { message: format(log) });\n            });\n            let sub: rxjsSubscription;\n            const cancelSubscription = () => {\n                subscription.unsubscribe();\n                log_file.close();\n                sub.unsubscribe();\n            };\n            sub = this.compileService.buildFile(\n                folder, file, message, namespace, buildFolder\n            ).subscribe(\n                () => {\n                    resolve({\n                        status: 'Finish'\n                    });\n                    cancelSubscription();\n                },\n                (e) => {\n                    cancelSubscription();\n                    reject(e || 'Build failed');\n                }\n            );\n        });\n\n    }\n\n    @Type(HistoryListType)\n    @Query({\n        skip: {\n            type: GraphQLInt\n        },\n        limit: {\n            type: GraphQLInt\n        },\n        where: {\n            type: new GraphQLInputObjectType({\n                name: 'BuildWhereType',\n                fields: {\n                    namespaceId: {\n                        type: GraphQLString\n                    },\n                    name: {\n                        type: GraphQLString\n                    }\n                }\n            })\n        }\n    })\n    async getBuildHistory(root, { skip, limit, where }): Promise<IHistoryListType> {\n        const items = await this.buildHistoryService.findAll(skip, limit, null, where);\n        return {\n            count: items.length,\n            rows: items\n        };\n    }\n\n\n    @Type(BuildStatusType)\n    @Subscribe((self: BuildController) => self.pubsub.asyncIterator('LISTEN_FOR_BUILDS'))\n    @Subscription()\n    buildStatus(payload) {\n        return { payload };\n    }\n\n\n    @Type(ProcessStdOutType)\n    @Subscribe((self: BuildController) => self.pubsub.asyncIterator('PROCESS_STDOUT'))\n    @Subscription()\n    processStdOut(payload) {\n        return { payload }\n    }\n\n}","import { Module } from \"@rxdi/core\";\nimport { BuildController } from \"./build.controller\";\n\n@Module({\n    controllers: [BuildController]\n})\nexport class BuildModule {}","import { GraphQLString, GraphQLInt } from \"graphql\";\n\nexport const FileArguments = {\n    size: {\n        type: GraphQLString\n    },\n    birthtime: {\n        type: GraphQLString\n    },\n    ctime: {\n        type: GraphQLString\n    },\n    mtime: {\n        type: GraphQLString\n    },\n    atime: {\n        type: GraphQLString\n    },\n    birthtimeMs: {\n        type: GraphQLString\n    },\n    ctimeMs: {\n        type: GraphQLString\n    },\n    mtimeMs: {\n        type: GraphQLString\n    },\n    atimeMs: {\n        type: GraphQLString\n    },\n    blocks: {\n        type: GraphQLInt\n    },\n    ino: {\n        type: GraphQLInt\n    },\n    blksize: {\n        type: GraphQLInt\n    },\n    rdev: {\n        type: GraphQLInt\n    },\n    gid: {\n        type: GraphQLInt\n    },\n    uid: {\n        type: GraphQLInt\n    },\n    nlink: {\n        type: GraphQLInt\n    },\n    mode: {\n        type: GraphQLInt\n    },\n    dev: {\n        type: GraphQLInt\n    },\n};","import { GraphQLObjectType } from \"@gapi/core\";\nimport { FileArguments } from \"./file.arguments\";\n\nexport const FileStatusType = new GraphQLObjectType({\n    name: 'FileStatusType',\n    fields: FileArguments\n})\n\n","import { GraphQLObjectType, GraphQLString, GraphQLBoolean } from \"graphql\";\nimport { FileStatusType } from './file-status.type';\n\nexport const FolderStructureType = new GraphQLObjectType({\n    name: 'FolderStructureType',\n    fields: {\n        path: {\n            type: GraphQLString\n        },\n        directory: {\n            type: GraphQLBoolean\n        },\n        file: {\n            type: GraphQLBoolean\n        },\n        name: {\n            type: GraphQLString\n        },\n        status: {\n            type: FileStatusType\n        }\n    }\n});","import { GraphQLObjectType, GraphQLList } from \"graphql\";\nimport { FolderStructureType } from './folder-structure.type';\n\nexport const FileType = new GraphQLObjectType({\n    name: 'FileType',\n    fields: {\n        paths: {\n            type: new GraphQLList(FolderStructureType)\n        }\n    }\n});","import { GraphQLObjectType, GraphQLString } from \"graphql\";\n\nexport const FileRawType = new GraphQLObjectType({\n    name: 'FileRawType',\n    fields: {\n        package: {\n            type: GraphQLString\n        },\n        file: {\n            type: GraphQLString\n        }\n    }\n})","import { Controller } from '@rxdi/core';\nimport { Query, Type, GraphQLString, GraphQLNonNull } from '@gapi/core';\nimport { FileType } from './types/file.type';\nimport { FileService as InternalFileService } from './services/file.service';\nimport { FileService } from '../../services/file/file.service';\nimport { FileRawType } from './types/file-raw.type';\nimport { includes } from '../../services';\n\n@Controller()\nexport class FileController {\n\n    constructor(\n        private fileServiceInternal: InternalFileService,\n        private fileService: FileService\n\n    ) { }\n\n    @Type(FileType)\n    @Query({\n        folder: {\n            type: GraphQLString\n        }\n    })\n    async listFiles(root, { folder }) {\n        let filePath;\n        if (includes('--enable-full-folder-access')) {\n            filePath = folder;\n        } else {\n            folder = folder.replace('.', '')\n            filePath = process.cwd() + folder;\n        }\n        return {\n            paths: await this.fileServiceInternal.listFolder(filePath)\n        };\n    }\n\n    @Type(FileRawType)\n    @Query({\n        folder: {\n            type: new GraphQLNonNull(GraphQLString)\n        }\n    })\n    async readFile(root, { folder }: { folder: string }) {\n        let filePath;\n        if (includes('--enable-full-folder-access')) {\n            filePath = folder;\n        } else {\n            folder = folder.replace('.', '')\n            filePath = process.cwd() + folder;\n        }\n        const extension = filePath.split('.').pop();\n        const isImage = extension === 'jpg' || extension === 'jpeg' || extension === 'png';\n        let file = await this.fileService.readFile(filePath);;\n        if (isImage) {\n            file = (await this.fileService.readFileRaw(filePath)).toString('base64');\n            file = `data:image/${extension};base64, ${file}`;\n        }\n\n        let reactivePackage = null;\n        try {\n            reactivePackage = await this.fileService.readFile(filePath.substring(0, filePath.lastIndexOf('/')) + '/reactive.json');\n        } catch (e) {}\n        return {\n            package: reactivePackage,\n            file \n        }\n    }\n\n    @Type(FileRawType)\n    @Query({\n        folder: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n        content: {\n            type: new GraphQLNonNull(GraphQLString)\n        }\n    })\n    async saveFile(root, { folder, content }) {\n        let filePath;\n        if (includes('--enable-full-folder-access')) {\n            filePath = folder;\n        } else {\n            folder = folder.replace('.', '')\n            filePath = process.cwd() + folder;\n        }\n        await this.fileService.writeFile(filePath, content);\n        return {\n            file: await this.fileService.readFile(filePath)\n        }\n    }\n\n}","import { Module } from \"@rxdi/core\";\nimport { FileService } from './services/file.service';\nimport { FileController } from './file.controller';\n\n@Module({\n    services: [FileService],\n    controllers: [FileController]\n})\nexport class FileModule {}","import { GraphQLEnumType } from \"graphql\";\n\nexport const TransactionTypeEnum = new GraphQLEnumType({\n    name: 'TransactionsTypeEnum',\n    values: {\n        DEPLOYED: {\n            value: 'DEPLOYED'\n        },\n        COMMITED: {\n            value: 'COMMITED'\n        },\n        UNKNOWN: {\n            value: 'UNKNOWN'\n        },\n        BUILD: {\n            value: 'BUILD'\n        },\n    }\n});\n\nexport type TransactionTypeEnum = 'DEPLOYED' | 'COMMITED' | 'UNKNOWN';","import { GraphQLObjectType, GraphQLString } from \"graphql\";\nimport { TransactionTypeEnum } from \"./transaction-enum.type\";\n\nexport const TransactionType = new GraphQLObjectType({\n    name: 'TransactionType',\n    fields: {\n        _id: {\n            type: GraphQLString\n        },\n        status: {\n            type: TransactionTypeEnum\n        },\n        birthtime: {\n            type: GraphQLString\n        },\n        path: {\n            type: GraphQLString\n        },\n        repoFolder: {\n            type: GraphQLString\n        }\n    }\n});\n","import { Injectable, Inject } from '@rxdi/core';\nimport { __TRANSACTIONS_DATABASE } from '../../../../../env.injection.tokens';\nimport { ITransactionType } from '../../../../core/api-introspection/index';\n\n@Injectable()\nexport class TransactionService {\n\n    @Inject(__TRANSACTIONS_DATABASE) private transaction: __TRANSACTIONS_DATABASE;\n\n    getTransactionById(_id: string) {\n        return new Promise((resolve, reject) => {\n            this.transaction.findOne({ _id }, (e, d) => {\n                if (e) {\n                    reject(e);\n                }\n                console.log(d);\n                resolve(d);\n            })\n        });\n    }\n\n    getTransactionByPath(path: string, repoFolder: string) {\n        return new Promise((resolve, reject) => {\n            this.transaction.findOne({ path, repoFolder }, (e, d) => {\n                if (e) {\n                    reject(e);\n                }\n                resolve(d);\n            })\n        });\n    }\n\n    async insert(doc: ITransactionType): Promise<ITransactionType> {\n        const isExist = await this.getTransactionByPath(doc.path, doc.repoFolder) as ITransactionType;\n        if (isExist) {\n            throw new Error(`File is already added to transaction ${isExist._id}: ${isExist.path}`);\n        }\n        return await new Promise((resolve, reject) => {\n            this.transaction.insert(doc, (e, d) => {\n                if (e) {\n                    reject(e)\n                }\n                resolve(d);\n            });\n        });\n    }\n\n    async remove(doc: ITransactionType): Promise<number> {\n        const transaction = await this.getTransactionByPath(doc.path, doc.repoFolder) as ITransactionType;\n        if (!transaction) {\n            throw new Error(`Transaction doesn't exist ${doc.path}`);\n        }\n        return await new Promise((resolve, reject) => {\n            this.transaction.remove(transaction, (e, d) => {\n                if (e) {\n                    reject(e)\n                }\n                resolve(d);\n            });\n        });\n    }\n\n\n    listTransactions(status: any, repoFolder: string, skip: number = 0, limit: number = 100, sort = {createdAt: -1}): Promise<any[]> {\n        const find = {} as any;\n        if (status !== 'UNKNOWN') {\n            find.status = status;\n        }\n        find.repoFolder = repoFolder;\n        console.log(find);\n        return new Promise((resolve, reject) => {\n            this.transaction\n                .find(find)\n                .sort(sort)\n                .skip(skip)\n                .limit(limit)\n                .exec((e, d: any) => {\n                    if (e) {\n                        reject(e);\n                    }\n                    resolve(d);\n                });\n        });\n    }\n\n}\n","import { Controller, GraphQLControllerOptions, Query, Mutation, Type, GraphQLList, GraphQLNonNull, GraphQLString } from '@gapi/core';\nimport { TransactionType } from './types/transaction.type';\nimport { TransactionService } from './services/transaction/transaction.service';\nimport { TransactionTypeEnum } from './types/transaction-enum.type';\nimport { ITransactionType } from '../../core/api-introspection';\n\n@Controller<GraphQLControllerOptions>({\n    guards: [],\n    type: TransactionType\n})\nexport class TransactionsController {\n\n    constructor(\n        private transactionSevice: TransactionService\n    ) {}\n\n    @Mutation({\n        path: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n        birthtime: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n        repoFolder: {\n            type: new GraphQLNonNull(GraphQLString)\n        }\n    })\n    addTransaction(root, payload: ITransactionType) {\n        return this.transactionSevice.insert({...payload, status: 'UNKNOWN'});\n    }\n\n    @Mutation({\n        path: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n        repoFolder: {\n            type: new GraphQLNonNull(GraphQLString)\n        },\n    })\n    checkoutTransaction(root, payload: ITransactionType) {\n        return this.transactionSevice.remove(payload);\n    }\n\n    @Type(new GraphQLList(TransactionType))\n    @Query({\n        status: {\n            type: TransactionTypeEnum\n        },\n        repoFolder: {\n            type: new GraphQLNonNull(GraphQLString)\n        }\n    })\n    listTransactions(root, {status, repoFolder}) {\n        return this.transactionSevice.listTransactions(status, repoFolder);\n    }\n}\n","import { Module } from '@gapi/core';\nimport { TransactionsController } from './transactions.controller';\nimport { TransactionService } from './services/transaction/transaction.service';\n\n@Module({\n  controllers: [TransactionsController],\n  providers: [TransactionService]\n})\nexport class TransactionsModule {}\n","import { Module } from '@rxdi/core';\nimport { WebUiService } from './services/webui.service';\nimport { ServerPushService } from './services/server-push.service';\nimport { UserQueriesController } from './user/user-queries.controller';\nimport { HistoryModule } from './history/history.module';\nimport { CompileService } from './services/compile.service';\nimport { NamespaceModule } from './namespace/namespace.module';\nimport { BuildModule } from './build/build.module';\nimport { FileModule } from './file/file.module';\nimport { TransactionsModule } from './transactions/transactions.module';\n\n@Module({\n    imports: [\n        HistoryModule,\n        NamespaceModule,\n        BuildModule,\n        FileModule,\n        TransactionsModule\n    ],\n    services: [WebUiService, ServerPushService, CompileService],\n    controllers: [UserQueriesController]\n})\nexport class ServerModule { }","\nimport { Module } from '@rxdi/core';\nimport { IpfsModule } from '@gapi/ipfs';\nimport { IpfsDaemonModule } from '@gapi/ipfs-daemon';\nimport { FileIpfsService } from './services/ipfs-file/ipfs-file.service';\nimport { FileService } from './services/file/file.service';\nimport { ParcelBundlerService } from './services/parcel-bundler/parcel-bundler.service';\nimport { FileUserService } from './services/file/file-user.service';\nimport { TypescriptDefinitionGeneratorService } from './services/dts-generator/dts-generator.service';\nimport { TsConfigGenratorService } from './services/tsconfig-generator/tsconfig-generator.service';\nimport { TableService } from './services/table-service/table-service';\nimport { StatusModule } from './status/status.module';\nimport { BuildHistoryService } from './services/build-history/build-history.service';\nimport { ErrorReasonService } from './services/error-reason/error-reason.service';\nimport { CompilePlugin } from './plugins/compile/compile.plugin';\nimport { TimeService } from './services/time/time.service';\nimport { HtmlTemplateBuilder, PackageJsonService, nextOrDefault, includes, PreviousService, LoggerService } from './services';\nimport { ServerModule } from './server/server.module';\n\nconst _IMPORTS = [\n    IpfsDaemonModule.forRoot({\n        type: nextOrDefault('--default-ipfs-node', 'go'),\n        config: {\n            Addresses: {\n                API: process.env.IPFS_API_PORT ? process.env.IPFS_API_PORT : nextOrDefault('--ipfs-api-port', '/ip4/0.0.0.0/tcp/5002', (a) => `/ip4/0.0.0.0/tcp/${a}`),\n                Gateway: process.env.IPFS_API_GATEWAY ? process.env.IPFS_API_GATEWAY : nextOrDefault('--ipfs-api-gateway', '/ip4/0.0.0.0/tcp/8081', (a) => `/ip4/0.0.0.0/tcp/${a}`),\n                Swarm: nextOrDefault('--ipfs-swarms', [ '/ip4/0.0.0.0/tcp/4001', '/ip6/::/tcp/4001' ], (a) => a.split(',')),\n            }\n        }\n    }),\n    IpfsModule.forRoot(),\n    StatusModule,\n];\n\nincludes('--webui') ? _IMPORTS.push(ServerModule) : null;\n\n@Module({\n    imports: _IMPORTS,\n    services: [\n        FileIpfsService,\n        FileService,\n        ParcelBundlerService,\n        FileUserService,\n        TypescriptDefinitionGeneratorService,\n        TsConfigGenratorService,\n        TableService,\n        BuildHistoryService,\n        ErrorReasonService,\n        TimeService,\n        HtmlTemplateBuilder,\n        PackageJsonService,\n        PreviousService,\n        LoggerService\n    ],\n    plugins: [CompilePlugin]\n})\nexport class AppModule { }","import { CoreModule, Module } from '@gapi/core';\nimport { nextOrDefault, includes } from './app/services/helpers/helpers';\nimport { ModuleWithServices } from '@rxdi/core';\n\n@Module()\nexport class GapiFrameworkImports {\n    public static forRoot(init: boolean): ModuleWithServices {\n        let imports = [];\n        if (init) {\n            imports = [CoreModule.forRoot({\n                server: {\n                    randomPort: !process.env.RANDOM_PORT ? nextOrDefault('--random-port', false, Boolean) : false,\n                    hapi: {\n                        port: process.env.API_PORT ? process.env.API_PORT : nextOrDefault('--graphql-api-port', 9300, Number),\n                        routes: {\n                            cors: {\n                                origin: ['*'],\n                                additionalHeaders: [\n                                    'Host',\n                                    'User-Agent',\n                                    'Accept',\n                                    'Accept-Language',\n                                    'Accept-Encoding',\n                                    'Access-Control-Request-Method',\n                                    'Access-Control-Allow-Origin',\n                                    'Access-Control-Request-Headers',\n                                    'Origin',\n                                    'Connection',\n                                    'Pragma',\n                                    'Cache-Control'\n                                ]\n                            }\n                        }\n    \n                    }\n                },\n                graphql: {\n                    path: nextOrDefault('--graphql-endpoint', '/graphql'),\n                    openBrowser: includes('--open-browser-graphiql'),\n                    watcherPort: nextOrDefault('--open-browser-graphiql', 8967),\n                    writeEffects: includes('--write-effects'),\n                    graphiql: includes('--graphiql'),\n                    graphiQlPlayground: includes('--graphiql-playground'),\n                    graphiQlPath: nextOrDefault('--graphiql-endpoint', '/graphiql'),\n                    graphiqlOptions: {\n                        endpointURL: nextOrDefault('--graphql-endpoint', '/graphql'),\n                        passHeader: `'Authorization':'${nextOrDefault('--graphiql-auth-token', '')}'`,\n                        subscriptionsEndpoint: nextOrDefault('--graphiql-subscription-endpoint', 'ws://localhost:9300/subscriptions'),\n                        websocketConnectionParams: {\n                            token: nextOrDefault('--graphiql-auth-token', '')\n                        }\n                    },\n                    graphqlOptions: {\n                        schema: null\n                    }\n                },\n            })]\n        }\n        return {\n            module: GapiFrameworkImports,\n            frameworkImports: imports\n        }\n    }\n}","export * from './server.module';","export * from './app.module';\nexport * from './services/index';\nexport * from './server/index';","process.argv.push(<Commands>'--webui');\nprocess.argv.push(<Commands>'--verbose');\nprocess.argv.push(<Commands>'--write-effects');\nprocess.argv.push(<Commands>'--graphiql-playground');\nprocess.argv.push(<Commands>'--server-push-interval');\nprocess.argv.push(<Commands>'--graphiql');\nimport { checkArguments } from './check-arguments';\nimport { Container, ConfigService, BootstrapFramework } from '@rxdi/core';\nimport { CommandDescription } from './commands-description';\nimport { includes } from './app/services/helpers/helpers';\nimport { LoggerService } from './app/services/logger/logger.service';\nconst Table = require('terminal-table');\nconst originalLog = console.log;\n\nconsole.log = function (...a) {\n    Container.get(LoggerService).stdout.next(a.toString());\n    return originalLog(...a);\n};\n\nincludes('--silent') ? console.log = () => null : null;\n\nif (includes('--help')) {\n    const t = new Table({\n        borderStyle: 2,\n        horizontalLine: true,\n        width: ['20%', '80%'],\n        leftPadding: 1\n    });\n    t.push(['Command', 'Description']);\n    t.push([`\\Available arguments are:`]);\n    Object.keys(CommandDescription).forEach(c => t.push([c, CommandDescription[c]]));\n    t.attrRange({ row: [0, 1] }, {\n        align: 'center',\n        color: 'green',\n        bg: 'black'\n    });\n    console.log('' + t);\n    process.exit(0);\n}\n\ncheckArguments();\n\nimport { EnvironemntSetterModule } from './environment-setter.module';\nimport { AppModule } from './app/app.module';\nimport { GapiFrameworkImports } from './gapi-framework-imports';\nimport { Commands } from 'commands';\n\n\nContainer.get(ConfigService).setConfig({\n    ...(process.argv.toString().includes('-v') || process.argv.toString().includes('--verbose')) ? ({\n        logger: {\n            logging: true,\n            hashes: false,\n            date: true,\n            exitHandler: true,\n            fileService: true\n        }\n    }) : ({}),\n    init: false,\n    initOptions: {\n        services: true,\n        plugins: true,\n        controllers: true\n    }\n});\n\nconst _FRAMEWORK_IMPORTS = [EnvironemntSetterModule, GapiFrameworkImports.forRoot(includes('--webui') || includes('--graphql-server-only'))];\n\n\nBootstrapFramework(AppModule, _FRAMEWORK_IMPORTS)\n    .subscribe(\n        () => {\n            console.log('Started! Use --open-browser argument! Enjoy! :)');\n        },\n        (error) => {\n            throw new Error(error);\n        },\n    );\n\nexport * from './app/index';\nexport * from './gapi-framework-imports';\nexport * from './env.injection.tokens';\nexport * from './commands';\nexport * from './check-arguments';\nexport * from './commands-description';"]}