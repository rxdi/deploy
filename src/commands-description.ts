export const CommandDescription = {
    '--message': 'Simple commit message when deploying module',
    '--out-dir': 'Parcel build out dir',
    '--file': 'Pass file path after this argument',
    '--namespace': `How this module will be named ? Later when you install it you can use it as follow import { MyModule } from '@mynamespace'`,
    '--beat': `How many seconds the application should stay after deploy recomended 20 seconds so file will be distributed accross the network`,
    '--html': 'Pass your html file this will override --message or 3-th argument message and you can put whole html',
    '--webui': `Will spawn web ui with many settings, history, last deployed module etc. can be passed with --open-browser argument`,
    '--open-browser': `Will open browser for web user interface`,
    '--graphiql-playground': `Development purposes open graphiql-playground dev tools`,
    '--node-only': `Will just spawn node so you can use it for persistent data`,
    '--silent': `Will silent every program output log`,
    '--unminify': 'Tell ParcelJS to not minify or uglify current deployed module',
    '--browser': 'Will tell ParcelJS to build current module for browser',
    '--tsconfig': `Create tsconfig file if not exist`,
    '--verbose': 'Better logging or you can use -v argument for simplicity',
    '--default-ipfs-node': `Default ipfs node is JS but if you want you can use GO '--default-ipfs-node go' you need to spawn your own daemon`,
    '--deployer-config-name': `This is default reactive.json filename you can change with other but in this moment is not tested very well`,
    '--graphiql': `Open GraphiQL dev screen`,
    '--open-browser-graphiql': 'Open browser for development purposes with Graphiql Dev tools',
    '--server-watcher': 'If this argument passed we can spawn our server watcher so we can manage syncronization with UI and passing data from the rxdi-deploy server',
    '--server-watcher-port': 'Watcher port',
    '--graphiql-subscription-endpoint': 'Graphiql Dev tool subscription endpoint',
    '--graphiql-auth-token': 'Authentication token for graphiql dev tools',
    '--graphql-endpoint': 'Endpoint for the Graphql webserver',
    '--write-effects': 'Development effects are for graphql webserver can be checked here for more info https://github.com/Stradivario/gapi',
    '--graphiql-endpoint': `Endpoint for Graphiql development tools`,
    '--graphql-api-port': 'Development server api port',
    '--disable-package-collection': `Disable collecting dependencies from package.json`,
    '--collect-packages': 'Collect dependencies from package.json and transfer it to reactive.json',
    '--help': `This help suite :)`
};